<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><title>JEP 160: Lambda-Form Representation for Method Handles</title><link rel="shortcut icon" href="/images/nanoduke.ico" /><link rel="stylesheet" type="text/css" href="/page.css" /><script type="text/javascript" src="/page.js"><noscript></noscript></script><style type="text/css" xml:space="preserve">
      TABLE { border-collapse: collapse; padding: 0px; margin: 1em 0; }
      TR:first-child TH, TR:first-child TD { padding-top: 0; }
      TH, TD { padding: 0px; padding-top: .5ex; vertical-align: baseline; text-align: left; }
      TD + TD, TH + TH { padding-left: 1em; }
      TD:first-child, TH:first-child, TD.jep { text-align: right; }
      TABLE.head TD:first-child { font-style: italic; padding-left: 2em; }
      PRE { padding-left: 2em; margin: 1ex 0; font-size: inherit; }
      TABLE PRE { padding-left: 0; margin: 0; }
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { padding-left: .5em; }
      TABLE.jeps TD:first-child,
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { font-size: smaller; }
      TABLE.jeps TD.cl { font-size: smaller; padding-right: 0; text-align: right; }
      TABLE.jeps TD.cm { font-size: smaller; padding-left: .1em; padding-right: .1em; }
      TABLE.jeps TD.cr { font-size: smaller; padding-left: 0; }
      TABLE.jeps TD.z { padding-left: 0; padding-right: 0; }
      TABLE.head TD { padding-top: 0; }
      .withdrawn { text-decoration: line-through; }
    </style></head><body><div id="main"><h1>JEP 160: Lambda-Form Representation for Method Handles</h1><table class="head"><tr><td>Owner</td><td>John Rose</td></tr><tr><td>Type</td><td>Feature</td></tr><tr><td>Scope</td><td>Implementation</td></tr><tr><td>Status</td><td>Closed&#8201;/&#8201;Delivered</td></tr><tr><td>Release</td><td>8</td></tr><tr><td>Discussion</td><td>mlvm dash dev at openjdk dot java dot net</td></tr><tr><td>Effort</td><td>L</td></tr><tr><td>Duration</td><td>L</td></tr><tr><td>Endorsed by</td><td>Mikael Vidstedt</td></tr><tr><td>Created</td><td>2012/03/15 20:00</td></tr><tr><td>Updated</td><td>2017/10/17 22:53</td></tr><tr><td>Issue</td><td><a href="https://bugs.openjdk.java.net/browse/JDK-8046150">8046150</a></td></tr></table><div class="markdown"><h2 id="Summary">Summary</h2>
<p>Improve the implementation of method handles by replacing assembly
language paths with an optimizable intermediate representation and then
refactoring the implementation so that more work is done in portable
Java code than is hardwired into the JVM.</p>
<h2 id="Goals">Goals</h2>
<ul>
<li>Improve performance, quality, and portability of method handles and
<code>invokedynamic</code>.</li>
<li>Reduce the amount of assembly code in the JVM.</li>
<li>Reduce the frequency of native calls and other complex transitions
of control during method handle processing.</li>
<li>Increase the leverage on JSR 292 performance of existing JVM
optimization frameworks.</li>
<li>Remove low-leverage or complex structures from the JVM that serve
JSR 292 only.
(E.g., remove the pattern-matching "method handle walk" phase.)</li>
<li>Complete compatibility with the Java SE 7 specification for JSR 292.</li>
<li>A better reference implementation of JSR 292.</li>
</ul>
<h2 id="Non-Goals">Non-Goals</h2>
<p>This work is intended to be a foundation for future optimization work,
to be carried out separately in the JVM and in the Java code.
Therefore, this project will succeed with modest improvements in
performance and stability.  Large performance gains are not required, as
long as the system is clearly simpler, better factored, and easier to
optimize.  This in turn will be clear if, after simplifying the Java 7
code base, performance is not harmed.</p>
<h2 id="Motivation">Motivation</h2>
<p>The JDK 7 implementation of JSR 292 (method handles and <code>invokedynamic</code>)
relies on large amounts of hand-written assembly code to perform method
handle argument transforms.  Optimized native code is obtained by a
separate module which performs a pattern-matching walk on method handle
graphs and converts them (inside the JVM JIT) into intermediate
representation (Java bytecodes, and then C1 or C2 IR).</p>
<p>This architecture is adequate for many uses, but suffers from two flaws.
First, invocations of non-constant method handles cannot be optimized,
because there the pattern-matching conversion to IR happens only at call
sites (such as <code>invokedynamic</code>).  Such invocations must copy the argument
list from compiled to interpreted format, and then execute the
hand-written assembly code for argument transformation, causing data
motion that is excessive and unoptimized.  Customers experience this as
a "performance cliff".</p>
<p>Second, because the interpreted and compiled versions of method handles
use different execution engines (assembly code vs. IR generated from
pattern matches), and because the translation between representations is
imperfect, compiled method handles do not always behave the same as
interpreted ones.  In particular there is an intermittent
<code>NoClassDefFoundError</code> caused when translated method handles grow too
large and their bytecodes contain too many symbolic references.</p>
<p>These flaws can be removed by removing the assembly code, and replacing
it by an intermediate representation used for both interpretation and
compilation.</p>
<p>As a secondary effect, removing the assembly code will make it easier
to port the JVM to additional platforms.</p>
<p>Non-constant method handle invocation will become more frequent in the
future, since method handles are part of the infrastructure for Java
"lambdas" which are coming in Java SE 8.  In general, as JSR 292 is
adopted more widely, it must become more robustly performant, across a
wider range of use cases.</p>
<h2 id="Description">Description</h2>
<p>Make a new intermediate representation, called <em>lambda form</em>, for method
handles that is (a) directly executable and (b) directly and simply
reducible to bytecodes and/or JIT IR.  Implement all method handle
operations, and <code>invokedynamic</code> call sites, using lambda forms.</p>
<p>Remove all assembly code from <code>methodHandles_&lt;arch&gt;.cpp</code>, except a small
number of assembly instructions (about 100) for sub-primitives used by
the lambda forms.  (By contrast, JDK 7 generates method handle stubs,
for numerous user-visible argument transforms, containing about 7000
assembly instructions.)</p>
<p>Move implementation logic specific to method handles from the JVM up
into Java code, when possible.  Rely on JITs to perform vigorous
optimization of lambda forms (or their corresponding bytecodes) and
their sub-primitives.</p>
<p>A lambda form represents a series of weakly typed formal parameters
followed by a linear, non-branching series of method call expressions.
Each expression consists of a method (specified as an arbitrary constant
method handle) with associated arguments.  An argument can be an
arbitrary constant or a reference to a preceding parameter or expression
within the lambda form.</p>
<p>Sub-primitives consist of low-level adapters for raw method handle
invocation and for emulating each of the four invocation modes
(invokevirtual, etc.).</p>
<p>A lambda form is compilable at any time into compact Java bytecodes and
passed to the JVM for dynamic loading.  Lambda forms will contain their
own invocation counters which will allow them to delay compilation until
they are "hot" enough.  Future versions of the JVM may be able to
execute and/or compile and/or profile lambda forms directly, leading to
further variations of the theme of mixed-mode execution and
optimization.</p>
<p>In order to maximize reuse of lambda forms and their compiled code, the
type system for lambda form expressions is weakened to five so-called
<em>basic types</em>: reference, int, long, float, and double.  This means they
can only be created by trusted Java code.  Explicit casts and other
checks preserve type safety at all entry points accessible to the user.</p>
<p>As a related optimization made practical by the new framework, bound
method handles will be "flattened" into small structs containing their
bound values, with little or no boxing.  These structs will be composed
and loaded as needed.</p>
<p>The bytecode generation framework for lambda forms and small
data-carrying structs is based on the ASM library
Although designed to create method handles, it can be
readily extended to create other types of objects.  Therefore, this work
will provide a likely basis for efficient representation of the
functional "SAM" objects required by Project Lambda, and perhaps other
future constructs, such as tuple objects or hybrid arrays.</p>
<p>Additional design notes are kept <a href="//hg.openjdk.java.net/mlvm/mlvm/hotspot/raw-file/tip/meth-lazy.txt">in the MLVM repository</a>.</p>
<h2 id="Alternatives">Alternatives</h2>
<p>We could keep the assembly code and attempt to refine the existing
pattern matcher and adapt it to compile stand-alone method handles (in
the absence of call sites).</p>
<p>The disadvantage would be increased complexity in the JVM JITs, and
(likely) more rapidly diminishing returns on optimization work.
Maintenance of hand-written assembler for all target platforms would
add larger per-platform costs, for both new and existing platforms.
Special stack frame types (so-called <em>ricochet frames</em>) would perhaps
increase the probability of bugs in modules which must walk the JVM
stack.</p>
<h2 id="Testing">Testing</h2>
<p>Existing tests with unit tests (jtreg-based) and "big applications" will
continue.  The test coverage will be incrementally improved.</p>
<p>Customer-derived benchmarks will be used to detect performance
improvements or regressions.</p>
<h2 id="Dependences">Dependences</h2>
<p>This will be a coordinated change in the JVM and JDK Java code bases.
(The Java code changes are confined to the java.lang.invoke and
sun.invoke packages.)  The changes must be deployed together.</p>
<p>It appears impractical to build in cross-revision support (old JVM and
new JDK and/or old JDK and new JVM).  This means that platform-specific
assembly code must be ported before a platform can run JDK 8.</p>
<p>We expect to back-port this code to JDK 7.  This means that we need to
complete the main body of the work (such as JVM refactorings) before any
other pervasive changes, such as large scale
<a href="147">metadata changes (JEP 147)</a> or <a href="122">metadata relocations (JEP 122)</a>,
take place in the JDK 8 code base.</p>
</div></div><div id="sidebar"><div id="openjdk-sidebar-logo"><a href="/"><img alt="OpenJDK logo" src="/images/openjdk-small.png" /></a></div><div class="links"><div class="links"><a href="/workshop"><b>Workshop</b></a></div></div><div class="links"><div class="link"><a href="/faq/">OpenJDK FAQ</a></div><div class="link"><a href="/install/">Installing</a></div><div class="link"><a href="/contribute/">Contributing</a></div><div class="link"><a href="/sponsor/">Sponsoring</a></div><div class="link"><a href="/guide/">Developers' Guide</a></div><div class="link"><a href="/groups/vulnerability/report">Vulnerabilities</a></div></div><div class="links"><div class="links"><a href="//mail.openjdk.java.net">Mailing lists</a></div><div class="link"><a href="/irc">IRC</a>
                      &#183; <a href="https://wiki.openjdk.java.net">Wiki</a></div></div><div class="links"><div class="links"><a href="/bylaws">Bylaws</a> &#183; <a href="/census">Census</a></div><div class="link"><a href="/legal/">Legal</a></div></div><div class="links"><div class="links"><a href="/jeps/0"><b>JEP Process</b></a></div></div><div class="links"><div class="link search"><form method="get" action="https://www.google.com/search"><input id="searchBox" style="color: gray" type="text" name="q" size="10" maxlength="255" value="search" /><input type="hidden" name="sitesearch" value="openjdk.java.net" /></form></div></div><div class="links"><div class="about">Source code</div><div class="link"><a href="//hg.openjdk.java.net">Mercurial</a></div><div class="link">Bundles (<a href="http://download.java.net/openjdk/jdk6">6</a>)</div></div><div class="links"><div class="about">Groups</div><div class="link"><a href="/groups/">(overview)</a></div><div class="link"><a href="/groups/2d">2D Graphics</a></div><div class="link"><a href="/groups/adoption">Adoption</a></div><div class="link"><a href="/groups/awt">AWT</a></div><div class="link"><a href="/groups/build">Build</a></div><div class="link"><a href="/groups/csr">Compatibility &amp; Specification Review</a></div><div class="link"><a href="/groups/compiler">Compiler</a></div><div class="link"><a href="/groups/conformance">Conformance</a></div><div class="link"><a href="/groups/core-libs">Core Libraries</a></div><div class="link"><a href="/groups/gb">Governing Board</a></div><div class="link"><a href="/groups/hotspot">HotSpot</a></div><div class="link"><a href="/groups/ide-support">IDE Tooling &amp; Support</a></div><div class="link"><a href="/groups/i18n">Internationalization</a></div><div class="link"><a href="/groups/jmx">JMX</a></div><div class="link"><a href="/groups/members">Members</a></div><div class="link"><a href="/groups/net">Networking</a></div><div class="link"><a href="/groups/nb-projects">NetBeans Projects</a></div><div class="link"><a href="/groups/porters">Porters</a></div><div class="link"><a href="/groups/quality">Quality</a></div><div class="link"><a href="/groups/security">Security</a></div><div class="link"><a href="/groups/serviceability">Serviceability</a></div><div class="link"><a href="/groups/sound">Sound</a></div><div class="link"><a href="/groups/swing">Swing</a></div><div class="link"><a href="/groups/vulnerability">Vulnerability</a></div><div class="link"><a href="/groups/web">Web</a></div></div><div class="links"><div class="about">Projects</div><div class="link"><a href="/projects/">(overview)</a></div><div class="link"><a href="/projects/amber">Amber</a></div><div class="link"><a href="/projects/anno-pipeline">Annotations Pipeline 2.0</a></div><div class="link"><a href="/projects/audio-engine">Audio Engine</a></div><div class="link"><a href="/projects/build-infra">Build Infrastructure</a></div><div class="link"><a href="/projects/caciocavallo">Caciocavallo</a></div><div class="link"><a href="/projects/closures">Closures</a></div><div class="link"><a href="/projects/code-tools">Code Tools</a></div><div class="link"><a href="/projects/coin">Coin</a></div><div class="link"><a href="/projects/cvmi">Common VM Interface</a></div><div class="link"><a href="/projects/compiler-grammar">Compiler Grammar</a></div><div class="link"><a href="/projects/detroit">Detroit</a></div><div class="link"><a href="/projects/dio">Device I/O</a></div><div class="link"><a href="/projects/duke">Duke</a></div><div class="link"><a href="/projects/font-scaler">Font Scaler</a></div><div class="link"><a href="/projects/fbtoolkit">Framebuffer Toolkit</a></div><div class="link"><a href="/projects/graal">Graal</a></div><div class="link"><a href="/projects/graphics-rasterizer">Graphics Rasterizer</a></div><div class="link"><a href="/projects/harfbuzz">HarfBuzz Integration</a></div><div class="link"><a href="/projects/icedtea">IcedTea</a></div><div class="link"><a href="/projects/jdk6">JDK 6</a></div><div class="link"><a href="/projects/jdk7">JDK 7</a></div><div class="link"><a href="/projects/jdk7u">JDK 7 Updates</a></div><div class="link"><a href="/projects/jdk8">JDK 8</a></div><div class="link"><a href="/projects/jdk8u">JDK 8 Updates</a></div><div class="link"><a href="/projects/jdk9">JDK 9</a></div><div class="link"><a href="/projects/jdk">JDK</a>
      (&#8230;
       <a href="/projects/jdk/12">12</a>,
       <a href="/projects/jdk/13">13</a>,
       <a href="/projects/jdk/14">14</a>)</div><div class="link"><a href="/projects/jdk-updates">JDK Updates</a></div><div class="link"><a href="/projects/javadoc-next">JavaDoc.Next</a></div><div class="link"><a href="/projects/jigsaw">Jigsaw</a></div><div class="link"><a href="/projects/kona">Kona</a></div><div class="link"><a href="/projects/kulla">Kulla</a></div><div class="link"><a href="/projects/lambda">Lambda</a></div><div class="link"><a href="/projects/lanai">Lanai</a></div><div class="link"><a href="/projects/locale-enhancement">Locale Enhancement</a></div><div class="link"><a href="/projects/loom">Loom</a></div><div class="link"><a href="/projects/jmm">Memory Model Update</a></div><div class="link"><a href="/projects/metropolis">Metropolis</a></div><div class="link"><a href="/projects/jmc">Mission Control</a></div><div class="link"><a href="/projects/mobile">Mobile</a></div><div class="link"><a href="/projects/modules">Modules</a></div><div class="link"><a href="/projects/mlvm">Multi-Language VM</a></div><div class="link"><a href="/projects/nashorn">Nashorn</a></div><div class="link"><a href="/projects/nio">New I/O</a></div><div class="link"><a href="/projects/openjfx">OpenJFX</a></div><div class="link"><a href="/projects/panama">Panama</a></div><div class="link"><a href="/projects/penrose">Penrose</a></div><div class="link"><a href="/projects/aarch32-port">Port: AArch32</a></div><div class="link"><a href="/projects/aarch64-port">Port: AArch64</a></div><div class="link"><a href="/projects/bsd-port">Port: BSD</a></div><div class="link"><a href="/projects/haiku-port">Port: Haiku</a></div><div class="link"><a href="/projects/macosx-port">Port: Mac OS X</a></div><div class="link"><a href="/projects/mips-port">Port: MIPS</a></div><div class="link"><a href="/projects/ppc-aix-port">Port: PowerPC/AIX</a></div><div class="link"><a href="/projects/s390x-port">Port: s390x</a></div><div class="link"><a href="/projects/portola">Portola</a></div><div class="link"><a href="/projects/sctp">SCTP</a></div><div class="link"><a href="/projects/skara">Skara</a></div><div class="link"><a href="/projects/shenandoah">Shenandoah</a></div><div class="link"><a href="/projects/sumatra">Sumatra</a></div><div class="link"><a href="/projects/threeten">ThreeTen</a></div><div class="link"><a href="/projects/tiered-attrib">Tiered Attribution</a></div><div class="link"><a href="/projects/tsan">Tsan</a></div><div class="link"><a href="/projects/type-annotations">Type Annotations</a></div><div class="link"><a href="/projects/xrender">XRender Pipeline</a></div><div class="link"><a href="/projects/valhalla">Valhalla</a></div><div class="link"><a href="/projects/verona">Verona</a></div><div class="link"><a href="/projects/visualvm">VisualVM</a></div><div class="link"><a href="/projects/zero">Zero</a></div><div class="link"><a href="/projects/zgc">ZGC</a></div></div><div class="links"><div class="about">Tools</div><div class="link"><a href="http://java.sun.com/javase/downloads/index.jsp">Java SE</a></div><div class="link"><a href="http://mercurial-scm.org/mercurial/">Mercurial</a></div><div class="link"><a href="/jtreg/index.html">jtreg harness</a></div></div><div class="links"><div class="about">Related</div><div class="link"><a href="http://planetjdk.org">Planet JDK</a></div><div class="link"><a href="http://java.sun.com">java.sun.com</a></div><div class="link"><a href="http://jcp.org">Java Community Process</a></div><div class="link"><a href="//jdk.java.net">JDK GA/EA Builds</a></div></div><div class="buttons"><a href="http://oracle.com"><img alt="Oracle logo" src="/images/oracle.png" /></a></div></div><div id="footer">

        &#169; 2019 Oracle Corporation and/or its affiliates
        <br /><a href="/legal/tou/">Terms of Use</a>
        &#183;
        
            License: <a href="/legal/gplv2+ce.html">GPLv2</a>
        &#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
        &#183; <a href="http://www.oracle.com/us/legal/third-party-trademarks/third-party-trademarks-078568.html">Trademarks</a></div><SCRIPT type="text/javascript">
  var sc_project=2527440;
  var sc_invisible=1;
  var sc_partition=24;
  var sc_security="d832a704";
  var sc_remove_link=1;
  </SCRIPT><script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js" async="yes"></script><noscript><div class="statcounter"><img class="statcounter" src="https://c.statcounter.com/2527440/0/d832a704/1/" alt="web statistics" /></div></noscript></body></html>
