<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><title>JEP 305: Pattern Matching for instanceof (Preview)</title><link rel="shortcut icon" href="/images/nanoduke.ico" /><link rel="stylesheet" type="text/css" href="/page.css" /><script type="text/javascript" src="/page.js"><noscript></noscript></script><style type="text/css" xml:space="preserve">
      TABLE { border-collapse: collapse; padding: 0px; margin: 1em 0; }
      TR:first-child TH, TR:first-child TD { padding-top: 0; }
      TH, TD { padding: 0px; padding-top: .5ex; vertical-align: baseline; text-align: left; }
      TD + TD, TH + TH { padding-left: 1em; }
      TD:first-child, TH:first-child, TD.jep { text-align: right; }
      TABLE.head TD:first-child { font-style: italic; padding-left: 2em; }
      PRE { padding-left: 2em; margin: 1ex 0; font-size: inherit; }
      TABLE PRE { padding-left: 0; margin: 0; }
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { padding-left: .5em; }
      TABLE.jeps TD:first-child,
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { font-size: smaller; }
      TABLE.jeps TD.cl { font-size: smaller; padding-right: 0; text-align: right; }
      TABLE.jeps TD.cm { font-size: smaller; padding-left: .1em; padding-right: .1em; }
      TABLE.jeps TD.cr { font-size: smaller; padding-left: 0; }
      TABLE.jeps TD.z { padding-left: 0; padding-right: 0; }
      TABLE.head TD { padding-top: 0; }
      .withdrawn { text-decoration: line-through; }
    </style></head><body><div id="main"><h1>JEP 305: Pattern Matching for instanceof (Preview)</h1><table class="head"><tr><td>Author</td><td>Brian Goetz</td></tr><tr><td>Owner</td><td>Gavin Bierman</td></tr><tr><td>Type</td><td>Feature</td></tr><tr><td>Scope</td><td>SE</td></tr><tr><td>Status</td><td>Integrated</td></tr><tr><td>Release</td><td>14</td></tr><tr><td>Component</td><td>specification&#8201;/&#8201;language</td></tr><tr><td>Discussion</td><td>amber dash dev at openjdk dot java dot net</td></tr><tr><td>Reviewed by</td><td>Mark Reinhold</td></tr><tr><td>Created</td><td>2017/05/30 19:48</td></tr><tr><td>Updated</td><td>2019/12/02 15:02</td></tr><tr><td>Issue</td><td><a href="https://bugs.openjdk.java.net/browse/JDK-8181287">8181287</a></td></tr></table><div class="markdown"><h2 id="Summary">Summary</h2>
<p>Enhance the Java programming language with <em>pattern matching</em> for the
<code>instanceof</code>
operator. <a href="//cr.openjdk.java.net/~briangoetz/amber/pattern-match.html">Pattern matching</a>
allows common logic in a program, namely the conditional extraction of components
from objects, to be expressed more concisely and safely.</p>
<h2 id="Motivation">Motivation</h2>
<p>Nearly every program includes some sort of logic that combines testing
if an expression has a certain type or structure, and then
conditionally extracting components of its state for further
processing.  For example, all Java programmers are familiar with the
instanceof-and-cast idiom:</p>
<pre><code>if (obj instanceof String) {
    String s = (String) obj;
    // use s
}</code></pre>
<p>There are three things going on here: a test (is <code>obj</code> a <code>String</code>?), a
conversion (casting <code>obj</code> to <code>String</code>), and the declaration of a new
local variable (<code>s</code>) so we can use the string value.  This pattern is
straightforward and understood by all Java programmers, but is
suboptimal for several reasons.  It is tedious; doing both the type
test and cast should be unnecessary (what else would you do after an
<code>instanceof</code> test?). This boilerplate -- in particular, the three
occurrences of the type <code>String</code> --- obfuscates the more significant
logic that follows.  But most importantly, the repetition provides
opportunities for errors to creep unnoticed into programs.</p>
<p>Rather than reach for ad-hoc solutions, we believe it is time for Java
to embrace <em>pattern matching</em>.  Pattern matching allows the desired
'shape' of an object to be expressed concisely (the <em>pattern</em>), and
for various statements and expressions to test that 'shape' against
their input (the <em>matching</em>). Many languages, from Haskell to C#,
have embraced pattern matching for its brevity and safety.</p>
<h2 id="Description">Description</h2>
<p>A <em>pattern</em> is a combination of (1) a <em>predicate</em> that can be applied to a
target, and (2) a set of <em>binding variables</em> that are
extracted from the target only if the predicate successfully applies
to it.</p>
<p>A <em>type test pattern</em> consists of a predicate that specifies a type,
along with a single binding variable.</p>
<p>The <code>instanceof</code> operator
(<a href="https://docs.oracle.com/javase/specs/jls/se11/html/jls-15.html#jls-15.20.2">JLS 15.20.2</a>)
is extended to take a type test pattern instead of just a type. In the
code below, the phrase <code>String s</code> is the type test pattern:</p>
<pre><code>if (obj instanceof String s) {
    // can use s here
} else {
    // can't use s here
}</code></pre>
<p>The <code>instanceof</code> operator "matches" the target <code>obj</code> to the type test
pattern as follows: if <code>obj</code> is an instance of <code>String</code>, then it is cast
to <code>String</code> and assigned to the binding variable <code>s</code>. The binding variable is in
scope in the true block of the <code>if</code> statement, and not in the false block of the <code>if</code> statement.</p>
<p>The scope of a binding variable, unlike the scope of a local variable, is determined by the semantics of the containing expressions and statements. For example, in this code:</p>
<pre><code>if (!(obj instanceof String s)) {
    .. s.contains(..) ..
} else {
    .. s.contains(..) ..
}</code></pre>
<p>the <code>s</code> in the true block refers to a field in the enclosing class, and the <code>s</code> in the false block refers to the binding variable introduced by the <code>instanceof</code> operator.</p>
<p>When the conditional of the <code>if</code> statement grows more complicated than a single <code>instanceof</code>, the scope of the binding variable grows accordingly. For example, in this code:</p>
<pre><code>if (obj instanceof String s &amp;&amp; s.length() &gt; 5) {.. s.contains(..) ..}</code></pre>
<p>the binding variable <code>s</code> is in scope on the right hand side of the <code>&amp;&amp;</code> operator, as well as in the true block. (The right hand side is only evaluated if <code>instanceof</code> succeeded and assigned to <code>s</code>.) On the other hand, in this code:</p>
<pre><code>if (obj instanceof String s || s.length() &gt; 5) {.. s.contains(..) ..}</code></pre>
<p>the binding variable <code>s</code> is not in scope on the right hand side of the || operator, nor is it in scope in the true block. (<code>s</code> at these points refers to a field in the enclosing class.)</p>
<p>There are no changes to how <code>instanceof</code> works when the target is null.
That is, the pattern will only match, and <code>s</code> will only be assigned, if <code>obj</code> is not null.</p>
<p>The use of pattern matching in <code>instanceof</code> should dramatically reduce
the overall number of explicit casts in Java programs. Moreover, type test
patterns are particularly useful when writing equality methods.
Consider the following equality method taken from Item 10 of the
<a href="https://www.oreilly.com/library/view/effective-java-3rd/9780134686097/">Effective Java book</a>:</p>
<pre><code>@Override public boolean equals(Object o) { 
    return (o instanceof CaseInsensitiveString) &amp;&amp; 
        ((CaseInsensitiveString) o).s.equalsIgnoreCase(s); 
}</code></pre>
<p>Using a type test pattern means it can be rewritten to the clearer:</p>
<pre><code>@Override public boolean equals(Object o) { 
    return (o instanceof CaseInsensitiveString cis) &amp;&amp; 
        cis.s.equalsIgnoreCase(s); 
}</code></pre>
<p>The <code>instanceof</code> <a href="https://docs.oracle.com/javase/specs/jls/se11/html/jls-15.html#jls-15.20">grammar</a> is extended accordingly:</p>
<p><em>RelationalExpression</em>:<br />
&#160;&#160;&#160;&#160; ...<br />
&#160;&#160;&#160;&#160; <em>RelationalExpression</em> <code>instanceof</code> <em>ReferenceType</em><br />
&#160;&#160;&#160;&#160; <em>RelationalExpression</em> <code>instanceof</code> <em>Pattern</em></p>
<p><em>Pattern</em>:<br />
&#160;&#160;&#160;&#160; <em>ReferenceType</em>  <em>Identifier</em></p>
<h2 id="Future-Work">Future Work</h2>
<p>Future JEPs will enhance the Java programming language with pattern
matching for other language constructs, such as <code>switch</code> expressions
and statements.</p>
<h2 id="Alternatives">Alternatives</h2>
<p>The benefits of type-test patterns could be obtained by
<em>flow typing</em> in <code>if</code> statements, or by a <em>type switch</em> construct.
Pattern matching generalizes both of these constructs.</p>
<h2 id="Dependencies">Dependencies</h2>
<p>The implementation may make use of <a href="https://openjdk.java.net/jeps/309">JEP 309 (Dynamic Class-File Constants)</a>.</p>
</div></div><div id="sidebar"><div id="openjdk-sidebar-logo"><a href="/"><img alt="OpenJDK logo" src="/images/openjdk-small.png" /></a></div><div class="links"><div class="links"><a href="/workshop"><b>Workshop</b></a></div></div><div class="links"><div class="link"><a href="/faq/">OpenJDK FAQ</a></div><div class="link"><a href="/install/">Installing</a></div><div class="link"><a href="/contribute/">Contributing</a></div><div class="link"><a href="/sponsor/">Sponsoring</a></div><div class="link"><a href="/guide/">Developers' Guide</a></div><div class="link"><a href="/groups/vulnerability/report">Vulnerabilities</a></div></div><div class="links"><div class="links"><a href="//mail.openjdk.java.net">Mailing lists</a></div><div class="link"><a href="/irc">IRC</a>
                      &#183; <a href="https://wiki.openjdk.java.net">Wiki</a></div></div><div class="links"><div class="links"><a href="/bylaws">Bylaws</a> &#183; <a href="/census">Census</a></div><div class="link"><a href="/legal/">Legal</a></div></div><div class="links"><div class="links"><a href="/jeps/0"><b>JEP Process</b></a></div></div><div class="links"><div class="link search"><form method="get" action="https://www.google.com/search"><input id="searchBox" style="color: gray" type="text" name="q" size="10" maxlength="255" value="search" /><input type="hidden" name="sitesearch" value="openjdk.java.net" /></form></div></div><div class="links"><div class="about">Source code</div><div class="link"><a href="//hg.openjdk.java.net">Mercurial</a></div><div class="link">Bundles (<a href="http://download.java.net/openjdk/jdk6">6</a>)</div></div><div class="links"><div class="about">Groups</div><div class="link"><a href="/groups/">(overview)</a></div><div class="link"><a href="/groups/2d">2D Graphics</a></div><div class="link"><a href="/groups/adoption">Adoption</a></div><div class="link"><a href="/groups/awt">AWT</a></div><div class="link"><a href="/groups/build">Build</a></div><div class="link"><a href="/groups/csr">Compatibility &amp; Specification Review</a></div><div class="link"><a href="/groups/compiler">Compiler</a></div><div class="link"><a href="/groups/conformance">Conformance</a></div><div class="link"><a href="/groups/core-libs">Core Libraries</a></div><div class="link"><a href="/groups/gb">Governing Board</a></div><div class="link"><a href="/groups/hotspot">HotSpot</a></div><div class="link"><a href="/groups/ide-support">IDE Tooling &amp; Support</a></div><div class="link"><a href="/groups/i18n">Internationalization</a></div><div class="link"><a href="/groups/jmx">JMX</a></div><div class="link"><a href="/groups/members">Members</a></div><div class="link"><a href="/groups/net">Networking</a></div><div class="link"><a href="/groups/nb-projects">NetBeans Projects</a></div><div class="link"><a href="/groups/porters">Porters</a></div><div class="link"><a href="/groups/quality">Quality</a></div><div class="link"><a href="/groups/security">Security</a></div><div class="link"><a href="/groups/serviceability">Serviceability</a></div><div class="link"><a href="/groups/sound">Sound</a></div><div class="link"><a href="/groups/swing">Swing</a></div><div class="link"><a href="/groups/vulnerability">Vulnerability</a></div><div class="link"><a href="/groups/web">Web</a></div></div><div class="links"><div class="about">Projects</div><div class="link"><a href="/projects/">(overview)</a></div><div class="link"><a href="/projects/amber">Amber</a></div><div class="link"><a href="/projects/anno-pipeline">Annotations Pipeline 2.0</a></div><div class="link"><a href="/projects/audio-engine">Audio Engine</a></div><div class="link"><a href="/projects/build-infra">Build Infrastructure</a></div><div class="link"><a href="/projects/caciocavallo">Caciocavallo</a></div><div class="link"><a href="/projects/closures">Closures</a></div><div class="link"><a href="/projects/code-tools">Code Tools</a></div><div class="link"><a href="/projects/coin">Coin</a></div><div class="link"><a href="/projects/cvmi">Common VM Interface</a></div><div class="link"><a href="/projects/compiler-grammar">Compiler Grammar</a></div><div class="link"><a href="/projects/detroit">Detroit</a></div><div class="link"><a href="/projects/dio">Device I/O</a></div><div class="link"><a href="/projects/duke">Duke</a></div><div class="link"><a href="/projects/font-scaler">Font Scaler</a></div><div class="link"><a href="/projects/fbtoolkit">Framebuffer Toolkit</a></div><div class="link"><a href="/projects/graal">Graal</a></div><div class="link"><a href="/projects/graphics-rasterizer">Graphics Rasterizer</a></div><div class="link"><a href="/projects/harfbuzz">HarfBuzz Integration</a></div><div class="link"><a href="/projects/icedtea">IcedTea</a></div><div class="link"><a href="/projects/jdk6">JDK 6</a></div><div class="link"><a href="/projects/jdk7">JDK 7</a></div><div class="link"><a href="/projects/jdk7u">JDK 7 Updates</a></div><div class="link"><a href="/projects/jdk8">JDK 8</a></div><div class="link"><a href="/projects/jdk8u">JDK 8 Updates</a></div><div class="link"><a href="/projects/jdk9">JDK 9</a></div><div class="link"><a href="/projects/jdk">JDK</a>
      (&#8230;
       <a href="/projects/jdk/12">12</a>,
       <a href="/projects/jdk/13">13</a>,
       <a href="/projects/jdk/14">14</a>)</div><div class="link"><a href="/projects/jdk-updates">JDK Updates</a></div><div class="link"><a href="/projects/javadoc-next">JavaDoc.Next</a></div><div class="link"><a href="/projects/jigsaw">Jigsaw</a></div><div class="link"><a href="/projects/kona">Kona</a></div><div class="link"><a href="/projects/kulla">Kulla</a></div><div class="link"><a href="/projects/lambda">Lambda</a></div><div class="link"><a href="/projects/lanai">Lanai</a></div><div class="link"><a href="/projects/locale-enhancement">Locale Enhancement</a></div><div class="link"><a href="/projects/loom">Loom</a></div><div class="link"><a href="/projects/jmm">Memory Model Update</a></div><div class="link"><a href="/projects/metropolis">Metropolis</a></div><div class="link"><a href="/projects/jmc">Mission Control</a></div><div class="link"><a href="/projects/mobile">Mobile</a></div><div class="link"><a href="/projects/modules">Modules</a></div><div class="link"><a href="/projects/mlvm">Multi-Language VM</a></div><div class="link"><a href="/projects/nashorn">Nashorn</a></div><div class="link"><a href="/projects/nio">New I/O</a></div><div class="link"><a href="/projects/openjfx">OpenJFX</a></div><div class="link"><a href="/projects/panama">Panama</a></div><div class="link"><a href="/projects/penrose">Penrose</a></div><div class="link"><a href="/projects/aarch32-port">Port: AArch32</a></div><div class="link"><a href="/projects/aarch64-port">Port: AArch64</a></div><div class="link"><a href="/projects/bsd-port">Port: BSD</a></div><div class="link"><a href="/projects/haiku-port">Port: Haiku</a></div><div class="link"><a href="/projects/macosx-port">Port: Mac OS X</a></div><div class="link"><a href="/projects/mips-port">Port: MIPS</a></div><div class="link"><a href="/projects/ppc-aix-port">Port: PowerPC/AIX</a></div><div class="link"><a href="/projects/s390x-port">Port: s390x</a></div><div class="link"><a href="/projects/portola">Portola</a></div><div class="link"><a href="/projects/sctp">SCTP</a></div><div class="link"><a href="/projects/skara">Skara</a></div><div class="link"><a href="/projects/shenandoah">Shenandoah</a></div><div class="link"><a href="/projects/sumatra">Sumatra</a></div><div class="link"><a href="/projects/threeten">ThreeTen</a></div><div class="link"><a href="/projects/tiered-attrib">Tiered Attribution</a></div><div class="link"><a href="/projects/tsan">Tsan</a></div><div class="link"><a href="/projects/type-annotations">Type Annotations</a></div><div class="link"><a href="/projects/xrender">XRender Pipeline</a></div><div class="link"><a href="/projects/valhalla">Valhalla</a></div><div class="link"><a href="/projects/verona">Verona</a></div><div class="link"><a href="/projects/visualvm">VisualVM</a></div><div class="link"><a href="/projects/zero">Zero</a></div><div class="link"><a href="/projects/zgc">ZGC</a></div></div><div class="links"><div class="about">Tools</div><div class="link"><a href="http://java.sun.com/javase/downloads/index.jsp">Java SE</a></div><div class="link"><a href="http://mercurial-scm.org/mercurial/">Mercurial</a></div><div class="link"><a href="/jtreg/index.html">jtreg harness</a></div></div><div class="links"><div class="about">Related</div><div class="link"><a href="http://planetjdk.org">Planet JDK</a></div><div class="link"><a href="http://java.sun.com">java.sun.com</a></div><div class="link"><a href="http://jcp.org">Java Community Process</a></div><div class="link"><a href="//jdk.java.net">JDK GA/EA Builds</a></div></div><div class="buttons"><a href="http://oracle.com"><img alt="Oracle logo" src="/images/oracle.png" /></a></div></div><div id="footer">

        &#169; 2019 Oracle Corporation and/or its affiliates
        <br /><a href="/legal/tou/">Terms of Use</a>
        &#183;
        
            License: <a href="/legal/gplv2+ce.html">GPLv2</a>
        &#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
        &#183; <a href="http://www.oracle.com/us/legal/third-party-trademarks/third-party-trademarks-078568.html">Trademarks</a></div><SCRIPT type="text/javascript">
  var sc_project=2527440;
  var sc_invisible=1;
  var sc_partition=24;
  var sc_security="d832a704";
  var sc_remove_link=1;
  </SCRIPT><script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js" async="yes"></script><noscript><div class="statcounter"><img class="statcounter" src="https://c.statcounter.com/2527440/0/d832a704/1/" alt="web statistics" /></div></noscript></body></html>
