<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><title>JEP 230: Microbenchmark Suite</title><link rel="shortcut icon" href="/images/nanoduke.ico" /><link rel="stylesheet" type="text/css" href="/page.css" /><script type="text/javascript" src="/page.js"><noscript></noscript></script><style type="text/css" xml:space="preserve">
      TABLE { border-collapse: collapse; padding: 0px; margin: 1em 0; }
      TR:first-child TH, TR:first-child TD { padding-top: 0; }
      TH, TD { padding: 0px; padding-top: .5ex; vertical-align: baseline; text-align: left; }
      TD + TD, TH + TH { padding-left: 1em; }
      TD:first-child, TH:first-child, TD.jep { text-align: right; }
      TABLE.head TD:first-child { font-style: italic; padding-left: 2em; }
      PRE { padding-left: 2em; margin: 1ex 0; font-size: inherit; }
      TABLE PRE { padding-left: 0; margin: 0; }
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { padding-left: .5em; }
      TABLE.jeps TD:first-child,
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { font-size: smaller; }
      TABLE.jeps TD.cl { font-size: smaller; padding-right: 0; text-align: right; }
      TABLE.jeps TD.cm { font-size: smaller; padding-left: .1em; padding-right: .1em; }
      TABLE.jeps TD.cr { font-size: smaller; padding-left: 0; }
      TABLE.jeps TD.z { padding-left: 0; padding-right: 0; }
      TABLE.head TD { padding-top: 0; }
      .withdrawn { text-decoration: line-through; }
    </style></head><body><div id="main"><h1>JEP 230: Microbenchmark Suite</h1><table class="head"><tr><td>Authors</td><td>Claes Redestad, Staffan Friberg, Aleksey Shipilev</td></tr><tr><td>Owner</td><td>Claes Redestad</td></tr><tr><td>Type</td><td>Feature</td></tr><tr><td>Scope</td><td>JDK</td></tr><tr><td>Status</td><td>Closed&#8201;/&#8201;Delivered</td></tr><tr><td>Release</td><td>12</td></tr><tr><td>Component</td><td>performance</td></tr><tr><td>Discussion</td><td>jdk dash dev at openjdk dot java dot net</td></tr><tr><td>Effort</td><td>S</td></tr><tr><td>Duration</td><td>M</td></tr><tr><td>Reviewed by</td><td>Joe Darcy, Mikael Vidstedt</td></tr><tr><td>Endorsed by</td><td>Mikael Vidstedt</td></tr><tr><td>Created</td><td>2014/07/17 00:07</td></tr><tr><td>Updated</td><td>2019/02/27 12:31</td></tr><tr><td>Issue</td><td><a href="https://bugs.openjdk.java.net/browse/JDK-8050952">8050952</a></td></tr></table><div class="markdown"><h2 id="Summary">Summary</h2>
<p>Add a basic suite of microbenchmarks to the JDK source code, and make it
easy for developers to run existing microbenchmarks and create new ones.</p>
<h2 id="Goals">Goals</h2>
<ul>
<li>Based on the [Java Microbenchmark Harness (JMH)][1]</li>
<li>Stable and tuned benchmarks, targeted for continuous performance
testing
<ul>
<li>A stable and non-moving suite after the Feature Complete milestone
of a feature release, and for non-feature releases</li>
<li>Support comparison to previous JDK releases for applicable tests</li>
</ul>
</li>
<li>Simplicity
<ul>
<li>Easy to add new benchmarks</li>
<li>Easy to update tests as APIs and options change, are deprecated, or
are removed during development</li>
<li>Easy to build</li>
<li>Easy to find and run a benchmark</li>
</ul>
</li>
<li>Support JMH updates</li>
<li>Include an initial set of around a hundred benchmarks in the suite</li>
</ul>
<h2 id="Non-Goals">Non-Goals</h2>
<ul>
<li>
<p>It is not a goal to provide benchmarks for new JDK features.
Adding benchmarks for new features will be done as part of those
projects.</p>
</li>
<li>
<p>It is not a goal to create a complete set of benchmarks covering
everything in the JDK.  The suite will continue to be expanded over
time with newly-written benchmarks, or through efforts specifically
targeted at extending its coverage.</p>
</li>
<li>
<p>It is not a goal to provide a solution for handling binary
dependencies in microbenchmarks.  Support for this might be added
later.</p>
</li>
</ul>
<h2 id="Description">Description</h2>
<p>The microbenchmark suite will be co-located with the JDK source code in a
single directory and, when built, will produce a single JAR
file. Co-location will simplify adding and locating benchmarks
during development. When running benchmarks, JMH provides powerful
filtering capabilities that allow the user to run only the benchmarks
that are currently of interest. The exact location remains to be
determined.</p>
<p>Benchmarking generally require comparisons to an earlier build, or even
release, so the microbenchmarks must support JDK(N), for benchmarks
targeting features in the new JDK, and JDK(N-1), for benchmarks targeting
features existing in an earlier release. This means, for JDK 12, that the
structure and build scripts must support compiling benchmarks for both
JDK 12 and JDK 11. The benchmarks will further be divided by using Java
package names that describe the area of the JDK they are testing.</p>
<p>The following directory structure is proposed:</p>
<pre><code>jdk/jdk
   .../make/test (Shared folder for Makefiles)
   .../test (Shared folder for functional tests)
      .../micro/org/openjdk/bench
         .../java (subdirectories similar to JDK packages and modules)
         .../vm (subdirectories similar to HotSpot components)</code></pre>
<p>The building of the microbenchmark suite will be integrated with the
normal JDK build system. It will be a separate target that is not
executed during normal JDK builds in order to keep the build time low for
developers and others not interested in building the microbenchmark
suite. To build the microbenchmark suite the user will have to
specifically run <code>make build-microbenchmark</code> or similar. Additionally
running benchmarks using <code>make test TEST="micro:regexp"</code> will be
supported. Instructions on how to set up your local environment will be
documented in <code>docs/testing.md|html</code>.</p>
<p>The benchmarks will all depend on JMH in much the same way
that some unit tests depend on TestNG or jtreg, so while the dependency
on JMH is new there are other parts of the build that have similar
dependencies. One difference compared to jtreg is that JMH is both used
during the build and is packaged as part of the resulting JAR file.</p>
<p>The set of benchmarks in the microbenchmark suite will be imported
from of the JMH JDK Microbenchmarks project.[2] These constitute a set
of tuned and tested microbenchmarks that is already in use internally. An open
question is whether to migrate this standalone project in its entirety to the
co-located suite, or to keep it as a stabilization forest for more long-lived
regression tests.</p>
<p>Any user, however, is still expected to make sure that other parameters such
as the execution machine and the JDK are stable and comparable when
doing analysis. Benchmarks are expected, in the common case, to be able
to finish a complete run in less than a minute.  This is not a wrapper framework
for large or long-running benchmarks; the goal is to provide a suite of fast and
targeted benchmarks. In some exceptional cases benchmarks may require
longer warmup or runtime in order to achieve stable results, but that should
be avoided as much as possible. It is not a goal of the suite to act as a general
wrapper for larger workloads; the intent, rather, is to extract a critical component
or method from a larger benchmark and stress only that part as a
microbenchmark.</p>
<p>As part of this project a new page on
<a href="https://wiki.openjdk.java.net">wiki.openjdk.java.net</a> will be created to
help explain how to develop new benchmarks and describe what the
requirements are for adding a benchmark. The requirements will mandate
adherence to coding standards, reproducible performance, and clear
documentation of the benchmark and what it is measuring.</p>
<h2 id="Alternatives">Alternatives</h2>
<p>Keep maintaining the microbenchmark suite as a separate project[2].</p>
<p>Co-location simplifies adding benchmarks for new features, especially
in a world where a large fraction of all new feature development is done
in project repositories (Valhalla, Amber etc). A case that has proven
to be especially convoluted in the separate project model is to test
changes to javac itself, which then requires an explicit rebuild of the
benchmark suite using each respective JDK. Co-locating would solve
this particular use case more elegantly, while not prohibiting use pre-built
benchmark bundles for performance tracking of stable tests over longer
time periods.</p>
<h2 id="Testing">Testing</h2>
<p>The microbenchmarks will be validated by the performance team as part of
regular performance testing to ensure that only stable, tuned, and
accurate microbenchmarks are added. Evaluation and profiling will also be
done for benchmarks on a case-by-case basis to ensure that it tests
the intended functionality. All tests must be run multiple times on all applicable
platforms to ensure that they are stable.</p>
<h2 id="Risks">Risks</h2>
<ul>
<li>
<p>A JDK build will depend on a version of JMH. The JDK build system
will need to be able to download or in some other way access to a
binary version of JMH, and it must be possible with reasonable effort
to update to a newer version of JMH when required. This should be an
easy-to-solve issue since we have similar dependencies for TestNG and
other libraries. The JMH dependency will only be visible for someone
trying to build the microbenchmark suite; other build targets do not
depend on JMH.</p>
</li>
<li>
<p>A significant increase in build time. The benchmark suite is not
required for regular developer JDK builds; it will be a separate
build target.</p>
</li>
<li>
<p>Potential test instability in new benchmarks. Thorough review and
testing of each added benchmark is required.</p>
</li>
<li>
<p>Increase in source-code repository size. Microbenchmarks are small,
as the name suggests, but there will over time hopefully be a large
set of them.  The main size will be due to resources that will need
to be handled outside of the repository.</p>
</li>
<li>
<p>Binary storage needs to be available to allow creation of certain
types of benchmarks.  Some benchmarks rely on external libraries or
large static resources such as XML documents and source-code files
used as part of the benchmark.  We currently have no solution for
this, but this will only limit benchmarks with this type of
dependence.  Small, non-binary resources might be allowed as part
of the microbenchmark source code.</p>
</li>
</ul>
<h2 id="Dependencies">Dependencies</h2>
<p>The microbenchmark suite will depend on the Java Microbenchmark Harness
version 1.12 or later.</p>
<p>[1] http://openjdk.java.net/projects/code-tools/jmh</p>
<p>[2] http://openjdk.java.net/projects/code-tools/jmh-jdk-microbenchmarks/</p>
</div></div><div id="sidebar"><div id="openjdk-sidebar-logo"><a href="/"><img alt="OpenJDK logo" src="/images/openjdk-small.png" /></a></div><div class="links"><div class="links"><a href="/workshop"><b>Workshop</b></a></div></div><div class="links"><div class="link"><a href="/faq/">OpenJDK FAQ</a></div><div class="link"><a href="/install/">Installing</a></div><div class="link"><a href="/contribute/">Contributing</a></div><div class="link"><a href="/sponsor/">Sponsoring</a></div><div class="link"><a href="/guide/">Developers' Guide</a></div><div class="link"><a href="/groups/vulnerability/report">Vulnerabilities</a></div></div><div class="links"><div class="links"><a href="//mail.openjdk.java.net">Mailing lists</a></div><div class="link"><a href="/irc">IRC</a>
                      &#183; <a href="https://wiki.openjdk.java.net">Wiki</a></div></div><div class="links"><div class="links"><a href="/bylaws">Bylaws</a> &#183; <a href="/census">Census</a></div><div class="link"><a href="/legal/">Legal</a></div></div><div class="links"><div class="links"><a href="/jeps/0"><b>JEP Process</b></a></div></div><div class="links"><div class="link search"><form method="get" action="https://www.google.com/search"><input id="searchBox" style="color: gray" type="text" name="q" size="10" maxlength="255" value="search" /><input type="hidden" name="sitesearch" value="openjdk.java.net" /></form></div></div><div class="links"><div class="about">Source code</div><div class="link"><a href="//hg.openjdk.java.net">Mercurial</a></div><div class="link">Bundles (<a href="http://download.java.net/openjdk/jdk6">6</a>)</div></div><div class="links"><div class="about">Groups</div><div class="link"><a href="/groups/">(overview)</a></div><div class="link"><a href="/groups/2d">2D Graphics</a></div><div class="link"><a href="/groups/adoption">Adoption</a></div><div class="link"><a href="/groups/awt">AWT</a></div><div class="link"><a href="/groups/build">Build</a></div><div class="link"><a href="/groups/csr">Compatibility &amp; Specification Review</a></div><div class="link"><a href="/groups/compiler">Compiler</a></div><div class="link"><a href="/groups/conformance">Conformance</a></div><div class="link"><a href="/groups/core-libs">Core Libraries</a></div><div class="link"><a href="/groups/gb">Governing Board</a></div><div class="link"><a href="/groups/hotspot">HotSpot</a></div><div class="link"><a href="/groups/ide-support">IDE Tooling &amp; Support</a></div><div class="link"><a href="/groups/i18n">Internationalization</a></div><div class="link"><a href="/groups/jmx">JMX</a></div><div class="link"><a href="/groups/members">Members</a></div><div class="link"><a href="/groups/net">Networking</a></div><div class="link"><a href="/groups/nb-projects">NetBeans Projects</a></div><div class="link"><a href="/groups/porters">Porters</a></div><div class="link"><a href="/groups/quality">Quality</a></div><div class="link"><a href="/groups/security">Security</a></div><div class="link"><a href="/groups/serviceability">Serviceability</a></div><div class="link"><a href="/groups/sound">Sound</a></div><div class="link"><a href="/groups/swing">Swing</a></div><div class="link"><a href="/groups/vulnerability">Vulnerability</a></div><div class="link"><a href="/groups/web">Web</a></div></div><div class="links"><div class="about">Projects</div><div class="link"><a href="/projects/">(overview)</a></div><div class="link"><a href="/projects/amber">Amber</a></div><div class="link"><a href="/projects/anno-pipeline">Annotations Pipeline 2.0</a></div><div class="link"><a href="/projects/audio-engine">Audio Engine</a></div><div class="link"><a href="/projects/build-infra">Build Infrastructure</a></div><div class="link"><a href="/projects/caciocavallo">Caciocavallo</a></div><div class="link"><a href="/projects/closures">Closures</a></div><div class="link"><a href="/projects/code-tools">Code Tools</a></div><div class="link"><a href="/projects/coin">Coin</a></div><div class="link"><a href="/projects/cvmi">Common VM Interface</a></div><div class="link"><a href="/projects/compiler-grammar">Compiler Grammar</a></div><div class="link"><a href="/projects/detroit">Detroit</a></div><div class="link"><a href="/projects/dio">Device I/O</a></div><div class="link"><a href="/projects/duke">Duke</a></div><div class="link"><a href="/projects/font-scaler">Font Scaler</a></div><div class="link"><a href="/projects/fbtoolkit">Framebuffer Toolkit</a></div><div class="link"><a href="/projects/graal">Graal</a></div><div class="link"><a href="/projects/graphics-rasterizer">Graphics Rasterizer</a></div><div class="link"><a href="/projects/harfbuzz">HarfBuzz Integration</a></div><div class="link"><a href="/projects/icedtea">IcedTea</a></div><div class="link"><a href="/projects/jdk6">JDK 6</a></div><div class="link"><a href="/projects/jdk7">JDK 7</a></div><div class="link"><a href="/projects/jdk7u">JDK 7 Updates</a></div><div class="link"><a href="/projects/jdk8">JDK 8</a></div><div class="link"><a href="/projects/jdk8u">JDK 8 Updates</a></div><div class="link"><a href="/projects/jdk9">JDK 9</a></div><div class="link"><a href="/projects/jdk">JDK</a>
      (&#8230;
       <a href="/projects/jdk/12">12</a>,
       <a href="/projects/jdk/13">13</a>,
       <a href="/projects/jdk/14">14</a>)</div><div class="link"><a href="/projects/jdk-updates">JDK Updates</a></div><div class="link"><a href="/projects/javadoc-next">JavaDoc.Next</a></div><div class="link"><a href="/projects/jigsaw">Jigsaw</a></div><div class="link"><a href="/projects/kona">Kona</a></div><div class="link"><a href="/projects/kulla">Kulla</a></div><div class="link"><a href="/projects/lambda">Lambda</a></div><div class="link"><a href="/projects/lanai">Lanai</a></div><div class="link"><a href="/projects/locale-enhancement">Locale Enhancement</a></div><div class="link"><a href="/projects/loom">Loom</a></div><div class="link"><a href="/projects/jmm">Memory Model Update</a></div><div class="link"><a href="/projects/metropolis">Metropolis</a></div><div class="link"><a href="/projects/jmc">Mission Control</a></div><div class="link"><a href="/projects/mobile">Mobile</a></div><div class="link"><a href="/projects/modules">Modules</a></div><div class="link"><a href="/projects/mlvm">Multi-Language VM</a></div><div class="link"><a href="/projects/nashorn">Nashorn</a></div><div class="link"><a href="/projects/nio">New I/O</a></div><div class="link"><a href="/projects/openjfx">OpenJFX</a></div><div class="link"><a href="/projects/panama">Panama</a></div><div class="link"><a href="/projects/penrose">Penrose</a></div><div class="link"><a href="/projects/aarch32-port">Port: AArch32</a></div><div class="link"><a href="/projects/aarch64-port">Port: AArch64</a></div><div class="link"><a href="/projects/bsd-port">Port: BSD</a></div><div class="link"><a href="/projects/haiku-port">Port: Haiku</a></div><div class="link"><a href="/projects/macosx-port">Port: Mac OS X</a></div><div class="link"><a href="/projects/mips-port">Port: MIPS</a></div><div class="link"><a href="/projects/ppc-aix-port">Port: PowerPC/AIX</a></div><div class="link"><a href="/projects/s390x-port">Port: s390x</a></div><div class="link"><a href="/projects/portola">Portola</a></div><div class="link"><a href="/projects/sctp">SCTP</a></div><div class="link"><a href="/projects/skara">Skara</a></div><div class="link"><a href="/projects/shenandoah">Shenandoah</a></div><div class="link"><a href="/projects/sumatra">Sumatra</a></div><div class="link"><a href="/projects/threeten">ThreeTen</a></div><div class="link"><a href="/projects/tiered-attrib">Tiered Attribution</a></div><div class="link"><a href="/projects/tsan">Tsan</a></div><div class="link"><a href="/projects/type-annotations">Type Annotations</a></div><div class="link"><a href="/projects/xrender">XRender Pipeline</a></div><div class="link"><a href="/projects/valhalla">Valhalla</a></div><div class="link"><a href="/projects/verona">Verona</a></div><div class="link"><a href="/projects/visualvm">VisualVM</a></div><div class="link"><a href="/projects/zero">Zero</a></div><div class="link"><a href="/projects/zgc">ZGC</a></div></div><div class="links"><div class="about">Tools</div><div class="link"><a href="http://java.sun.com/javase/downloads/index.jsp">Java SE</a></div><div class="link"><a href="http://mercurial-scm.org/mercurial/">Mercurial</a></div><div class="link"><a href="/jtreg/index.html">jtreg harness</a></div></div><div class="links"><div class="about">Related</div><div class="link"><a href="http://planetjdk.org">Planet JDK</a></div><div class="link"><a href="http://java.sun.com">java.sun.com</a></div><div class="link"><a href="http://jcp.org">Java Community Process</a></div><div class="link"><a href="//jdk.java.net">JDK GA/EA Builds</a></div></div><div class="buttons"><a href="http://oracle.com"><img alt="Oracle logo" src="/images/oracle.png" /></a></div></div><div id="footer">

        &#169; 2019 Oracle Corporation and/or its affiliates
        <br /><a href="/legal/tou/">Terms of Use</a>
        &#183;
        
            License: <a href="/legal/gplv2+ce.html">GPLv2</a>
        &#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
        &#183; <a href="http://www.oracle.com/us/legal/third-party-trademarks/third-party-trademarks-078568.html">Trademarks</a></div><SCRIPT type="text/javascript">
  var sc_project=2527440;
  var sc_invisible=1;
  var sc_partition=24;
  var sc_security="d832a704";
  var sc_remove_link=1;
  </SCRIPT><script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js" async="yes"></script><noscript><div class="statcounter"><img class="statcounter" src="https://c.statcounter.com/2527440/0/d832a704/1/" alt="web statistics" /></div></noscript></body></html>
