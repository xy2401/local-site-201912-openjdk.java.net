<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><title>JEP 259: Stack-Walking API</title><link rel="shortcut icon" href="/images/nanoduke.ico" /><link rel="stylesheet" type="text/css" href="/page.css" /><script type="text/javascript" src="/page.js"><noscript></noscript></script><style type="text/css" xml:space="preserve">
      TABLE { border-collapse: collapse; padding: 0px; margin: 1em 0; }
      TR:first-child TH, TR:first-child TD { padding-top: 0; }
      TH, TD { padding: 0px; padding-top: .5ex; vertical-align: baseline; text-align: left; }
      TD + TD, TH + TH { padding-left: 1em; }
      TD:first-child, TH:first-child, TD.jep { text-align: right; }
      TABLE.head TD:first-child { font-style: italic; padding-left: 2em; }
      PRE { padding-left: 2em; margin: 1ex 0; font-size: inherit; }
      TABLE PRE { padding-left: 0; margin: 0; }
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { padding-left: .5em; }
      TABLE.jeps TD:first-child,
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { font-size: smaller; }
      TABLE.jeps TD.cl { font-size: smaller; padding-right: 0; text-align: right; }
      TABLE.jeps TD.cm { font-size: smaller; padding-left: .1em; padding-right: .1em; }
      TABLE.jeps TD.cr { font-size: smaller; padding-left: 0; }
      TABLE.jeps TD.z { padding-left: 0; padding-right: 0; }
      TABLE.head TD { padding-top: 0; }
      .withdrawn { text-decoration: line-through; }
    </style></head><body><div id="main"><h1>JEP 259: Stack-Walking API</h1><table class="head"><tr><td>Owner</td><td>Mandy Chung</td></tr><tr><td>Type</td><td>Feature</td></tr><tr><td>Scope</td><td>SE</td></tr><tr><td>Status</td><td>Closed&#8201;/&#8201;Delivered</td></tr><tr><td>Release</td><td>9</td></tr><tr><td>Component</td><td>core-libs</td></tr><tr><td>Discussion</td><td>core dash libs dash dev at openjdk dot java dot net</td></tr><tr><td>Effort</td><td>M</td></tr><tr><td>Duration</td><td>M</td></tr><tr><td>Reviewed by</td><td>Brian Goetz, Mark Reinhold</td></tr><tr><td>Endorsed by</td><td>Brian Goetz</td></tr><tr><td>Created</td><td>2014/05/22 22:05</td></tr><tr><td>Updated</td><td>2017/07/18 15:06</td></tr><tr><td>Issue</td><td><a href="https://bugs.openjdk.java.net/browse/JDK-8043814">8043814</a></td></tr></table><div class="markdown"><h2 id="Summary">Summary</h2>
<p>Define an efficient standard API for stack walking that allows easy
filtering of, and lazy access to, the information in stack traces.</p>
<h2 id="Non-Goal">Non-Goal</h2>
<ul>
<li>It is not a goal to convert all existing stack walking code in the JDK to use this new API.</li>
</ul>
<h2 id="Motivation">Motivation</h2>
<p>There is no standard API to traverse selected frames on the execution
stack efficiently and access the <code>Class</code> instance of each frame.</p>
<p>There are existing APIs that provide access to a thread's stack:</p>
<ul>
<li>
<p><code>Throwable::getStackTrace</code> and <code>Thread::getStackTrace</code> return an
array of <code>StackTraceElement</code> objects, which contain the class name
and method name of each stack-trace element.</p>
</li>
<li>
<p><code>SecurityManager::getClassContext</code> is a protected method, which
allows a <code>SecurityManager</code> subclass to access the class context.</p>
</li>
</ul>
<p>These APIs require the VM to eagerly capture a snapshot of the entire
stack, and they return information representing the entire stack.  There
is no way to avoid the cost of examining all the frames if the caller is
only interested in the top few frames on the stack.  Both the
<code>Throwable::getStackTrace</code> and <code>Thread::getStackTrace</code> methods return an
array of <code>StackTraceElement</code> objects, which contain class names and
method names but not the actual <code>Class</code> instances.  For applications
interested in the entire stack, the specification allows the VM
implementation to omit some frames in the stack for performance.  In
other words, <code>Thread::getStackTrace</code> may return a partial stack trace.</p>
<p>These APIs do not satisfy the use cases that currently depend upon the
JDK-internal <code>sun.reflect.Reflection::getCallerClass</code> method, or else
their performance overhead is intolerable.  These use cases include:</p>
<ul>
<li>
<p>Walk the stack until the immediate caller's class is found.  Every
JDK caller-sensitive API looks up its immediate caller's class in
order to determine the behavior of the API.  For example, the
<code>Class::forName</code> and <code>ResourceBundle::getBundle</code> methods use the
immediate caller's class loader to load a class and a resource bundle
respectively.  Reflective APIs such as <code>Class::getMethod</code> use the
immediate caller's class loader to determine the security checks to
be performed.</p>
</li>
<li>
<p>Walk the stack, filtering out the stack frames of specific
implementation classes to find the first non-filtered frame.  The
<code>java.util.logging</code> API, Log4j, and the Groovy runtime filter
intermediate stack frames (typically implementation-specific and
reflection frames) to find the caller's class.</p>
</li>
<li>
<p>Walk the stack to find all protection domains, until the first
privileged frame is reached.  This is required in order to do
permission checks.</p>
</li>
<li>
<p>Walk the entire stack, possibly with a depth limit.  This is required
to generate the stack trace of any <code>Throwable</code> object, and to
implement the <code>Thread::dumpStack</code> method.</p>
</li>
</ul>
<h2 id="Description">Description</h2>
<p>This JEP will define a stack-walking API that allows laziness and frame
filtering, supports short walks that stop at a frame matching given
criteria, and also supports long walks that traverse the entire stack.</p>
<p>The JVM will be enhanced to provide a flexible mechanism to traverse and
materialize the required stack-frame information and allow efficient lazy
access to additional stack frames when required.  Native JVM transitions
will be minimized.  The implementation will need to have a stable view of
a thread's stack: Returning a stream holding a stack pointer for further
manipulation in an uncontrolled manner will not work since, as soon as
the stream factory returns, the JVM will be free to reorganize the
control stack (via deoptimization, for example).  This will influence the
API's definition.</p>
<p>The API will specify its behavior when running with a security manager,
so that access to the <code>Class</code> objects in stack frames do not compromise
security.</p>
<p>The proposal is to define a capability-based <code>StackWalker</code> API
to traverse the stack.  The security permission check will be performed
on each <code>StackWalker</code> object when it is constructed rather than each time
it is used.  It will define the following methods:</p>
<pre><code>public &lt;T&gt; T walk(Function&lt;Stream&lt;StackFrame&gt;, T&gt; function);
public Class&lt;?&gt; getCallerClass();</code></pre>
<p>The <code>walk</code> method opens a sequential stream of <code>StackFrame</code> for the current thread
and then applies the function with the <code>StackFrame</code> stream.
The spliterator of the stream performs the stack frame traversal in an ordered manner.
The <code>Stream&lt;StackFrame&gt;</code> object can only be traversed once and will be closed
when the <code>walk</code> method returns.  The stream becomes invalid to use once it is closed.
For example, to find the first caller filtering a known list of implementation class:</p>
<pre><code>Optional&lt;Class&lt;?&gt;&gt; frame = new StackWalker().walk((s) -&gt;
{
    s.filter(f -&gt; interestingClasses.contains(f.getDeclaringClass()))
     .map(StackFrame::getDeclaringClass)
     .findFirst();
});</code></pre>
<p>To snapshot the stack trace of the current thread,</p>
<pre><code>List&lt;StackFrame&gt; stack =
     new StackWalker().walk((s) -&gt; s.collect(Collectors.toList()));</code></pre>
<p>The <code>getCallerClass()</code> method is for convenience to find the caller's frame and is
the replacement for <code>sun.reflect.Reflection.getCallerClass</code>.   An equivalent way to get the caller class using the <code>walk</code> method is:</p>
<pre><code>walk((s) -&gt; s.map(StackFrame::declaringClass).skip(2).findFirst());</code></pre>
<h2 id="Alternatives">Alternatives</h2>
<p>An alternative API choice would be for the <code>walk</code> method to return <code>Stream&lt;StackFrame&gt;</code>.
Such an alternative will not work as the returned stream object may be used in an uncontrolled manner
for further manipulation.  When a stream of stack frames is created, as soon as
the stream factory returns,  the JVM is free to reorganize the control stack (via deoptimization, for example)
and there is no robust way to detect if the stack has been mutated.</p>
<p>Instead, similar to <code>AccessController::doPrivileged</code>, at least one native method must be
created which will establish its own stack frame and then provide controlled access
to the JVM's stack walking logic, for older frames.
When this native method returns, that capability must be deactivated, or else made inaccessible
in some other way.  In this way, we can do efficient lazy access to stack frames, on a stable view
of the thread's own control stack.</p>
</div></div><div id="sidebar"><div id="openjdk-sidebar-logo"><a href="/"><img alt="OpenJDK logo" src="/images/openjdk-small.png" /></a></div><div class="links"><div class="links"><a href="/workshop"><b>Workshop</b></a></div></div><div class="links"><div class="link"><a href="/faq/">OpenJDK FAQ</a></div><div class="link"><a href="/install/">Installing</a></div><div class="link"><a href="/contribute/">Contributing</a></div><div class="link"><a href="/sponsor/">Sponsoring</a></div><div class="link"><a href="/guide/">Developers' Guide</a></div><div class="link"><a href="/groups/vulnerability/report">Vulnerabilities</a></div></div><div class="links"><div class="links"><a href="//mail.openjdk.java.net">Mailing lists</a></div><div class="link"><a href="/irc">IRC</a>
                      &#183; <a href="https://wiki.openjdk.java.net">Wiki</a></div></div><div class="links"><div class="links"><a href="/bylaws">Bylaws</a> &#183; <a href="/census">Census</a></div><div class="link"><a href="/legal/">Legal</a></div></div><div class="links"><div class="links"><a href="/jeps/0"><b>JEP Process</b></a></div></div><div class="links"><div class="link search"><form method="get" action="https://www.google.com/search"><input id="searchBox" style="color: gray" type="text" name="q" size="10" maxlength="255" value="search" /><input type="hidden" name="sitesearch" value="openjdk.java.net" /></form></div></div><div class="links"><div class="about">Source code</div><div class="link"><a href="//hg.openjdk.java.net">Mercurial</a></div><div class="link">Bundles (<a href="http://download.java.net/openjdk/jdk6">6</a>)</div></div><div class="links"><div class="about">Groups</div><div class="link"><a href="/groups/">(overview)</a></div><div class="link"><a href="/groups/2d">2D Graphics</a></div><div class="link"><a href="/groups/adoption">Adoption</a></div><div class="link"><a href="/groups/awt">AWT</a></div><div class="link"><a href="/groups/build">Build</a></div><div class="link"><a href="/groups/csr">Compatibility &amp; Specification Review</a></div><div class="link"><a href="/groups/compiler">Compiler</a></div><div class="link"><a href="/groups/conformance">Conformance</a></div><div class="link"><a href="/groups/core-libs">Core Libraries</a></div><div class="link"><a href="/groups/gb">Governing Board</a></div><div class="link"><a href="/groups/hotspot">HotSpot</a></div><div class="link"><a href="/groups/ide-support">IDE Tooling &amp; Support</a></div><div class="link"><a href="/groups/i18n">Internationalization</a></div><div class="link"><a href="/groups/jmx">JMX</a></div><div class="link"><a href="/groups/members">Members</a></div><div class="link"><a href="/groups/net">Networking</a></div><div class="link"><a href="/groups/nb-projects">NetBeans Projects</a></div><div class="link"><a href="/groups/porters">Porters</a></div><div class="link"><a href="/groups/quality">Quality</a></div><div class="link"><a href="/groups/security">Security</a></div><div class="link"><a href="/groups/serviceability">Serviceability</a></div><div class="link"><a href="/groups/sound">Sound</a></div><div class="link"><a href="/groups/swing">Swing</a></div><div class="link"><a href="/groups/vulnerability">Vulnerability</a></div><div class="link"><a href="/groups/web">Web</a></div></div><div class="links"><div class="about">Projects</div><div class="link"><a href="/projects/">(overview)</a></div><div class="link"><a href="/projects/amber">Amber</a></div><div class="link"><a href="/projects/anno-pipeline">Annotations Pipeline 2.0</a></div><div class="link"><a href="/projects/audio-engine">Audio Engine</a></div><div class="link"><a href="/projects/build-infra">Build Infrastructure</a></div><div class="link"><a href="/projects/caciocavallo">Caciocavallo</a></div><div class="link"><a href="/projects/closures">Closures</a></div><div class="link"><a href="/projects/code-tools">Code Tools</a></div><div class="link"><a href="/projects/coin">Coin</a></div><div class="link"><a href="/projects/cvmi">Common VM Interface</a></div><div class="link"><a href="/projects/compiler-grammar">Compiler Grammar</a></div><div class="link"><a href="/projects/detroit">Detroit</a></div><div class="link"><a href="/projects/dio">Device I/O</a></div><div class="link"><a href="/projects/duke">Duke</a></div><div class="link"><a href="/projects/font-scaler">Font Scaler</a></div><div class="link"><a href="/projects/fbtoolkit">Framebuffer Toolkit</a></div><div class="link"><a href="/projects/graal">Graal</a></div><div class="link"><a href="/projects/graphics-rasterizer">Graphics Rasterizer</a></div><div class="link"><a href="/projects/harfbuzz">HarfBuzz Integration</a></div><div class="link"><a href="/projects/icedtea">IcedTea</a></div><div class="link"><a href="/projects/jdk6">JDK 6</a></div><div class="link"><a href="/projects/jdk7">JDK 7</a></div><div class="link"><a href="/projects/jdk7u">JDK 7 Updates</a></div><div class="link"><a href="/projects/jdk8">JDK 8</a></div><div class="link"><a href="/projects/jdk8u">JDK 8 Updates</a></div><div class="link"><a href="/projects/jdk9">JDK 9</a></div><div class="link"><a href="/projects/jdk">JDK</a>
      (&#8230;
       <a href="/projects/jdk/12">12</a>,
       <a href="/projects/jdk/13">13</a>,
       <a href="/projects/jdk/14">14</a>)</div><div class="link"><a href="/projects/jdk-updates">JDK Updates</a></div><div class="link"><a href="/projects/javadoc-next">JavaDoc.Next</a></div><div class="link"><a href="/projects/jigsaw">Jigsaw</a></div><div class="link"><a href="/projects/kona">Kona</a></div><div class="link"><a href="/projects/kulla">Kulla</a></div><div class="link"><a href="/projects/lambda">Lambda</a></div><div class="link"><a href="/projects/lanai">Lanai</a></div><div class="link"><a href="/projects/locale-enhancement">Locale Enhancement</a></div><div class="link"><a href="/projects/loom">Loom</a></div><div class="link"><a href="/projects/jmm">Memory Model Update</a></div><div class="link"><a href="/projects/metropolis">Metropolis</a></div><div class="link"><a href="/projects/jmc">Mission Control</a></div><div class="link"><a href="/projects/mobile">Mobile</a></div><div class="link"><a href="/projects/modules">Modules</a></div><div class="link"><a href="/projects/mlvm">Multi-Language VM</a></div><div class="link"><a href="/projects/nashorn">Nashorn</a></div><div class="link"><a href="/projects/nio">New I/O</a></div><div class="link"><a href="/projects/openjfx">OpenJFX</a></div><div class="link"><a href="/projects/panama">Panama</a></div><div class="link"><a href="/projects/penrose">Penrose</a></div><div class="link"><a href="/projects/aarch32-port">Port: AArch32</a></div><div class="link"><a href="/projects/aarch64-port">Port: AArch64</a></div><div class="link"><a href="/projects/bsd-port">Port: BSD</a></div><div class="link"><a href="/projects/haiku-port">Port: Haiku</a></div><div class="link"><a href="/projects/macosx-port">Port: Mac OS X</a></div><div class="link"><a href="/projects/mips-port">Port: MIPS</a></div><div class="link"><a href="/projects/ppc-aix-port">Port: PowerPC/AIX</a></div><div class="link"><a href="/projects/s390x-port">Port: s390x</a></div><div class="link"><a href="/projects/portola">Portola</a></div><div class="link"><a href="/projects/sctp">SCTP</a></div><div class="link"><a href="/projects/skara">Skara</a></div><div class="link"><a href="/projects/shenandoah">Shenandoah</a></div><div class="link"><a href="/projects/sumatra">Sumatra</a></div><div class="link"><a href="/projects/threeten">ThreeTen</a></div><div class="link"><a href="/projects/tiered-attrib">Tiered Attribution</a></div><div class="link"><a href="/projects/tsan">Tsan</a></div><div class="link"><a href="/projects/type-annotations">Type Annotations</a></div><div class="link"><a href="/projects/xrender">XRender Pipeline</a></div><div class="link"><a href="/projects/valhalla">Valhalla</a></div><div class="link"><a href="/projects/verona">Verona</a></div><div class="link"><a href="/projects/visualvm">VisualVM</a></div><div class="link"><a href="/projects/zero">Zero</a></div><div class="link"><a href="/projects/zgc">ZGC</a></div></div><div class="links"><div class="about">Tools</div><div class="link"><a href="http://java.sun.com/javase/downloads/index.jsp">Java SE</a></div><div class="link"><a href="http://mercurial-scm.org/mercurial/">Mercurial</a></div><div class="link"><a href="/jtreg/index.html">jtreg harness</a></div></div><div class="links"><div class="about">Related</div><div class="link"><a href="http://planetjdk.org">Planet JDK</a></div><div class="link"><a href="http://java.sun.com">java.sun.com</a></div><div class="link"><a href="http://jcp.org">Java Community Process</a></div><div class="link"><a href="//jdk.java.net">JDK GA/EA Builds</a></div></div><div class="buttons"><a href="http://oracle.com"><img alt="Oracle logo" src="/images/oracle.png" /></a></div></div><div id="footer">

        &#169; 2019 Oracle Corporation and/or its affiliates
        <br /><a href="/legal/tou/">Terms of Use</a>
        &#183;
        
            License: <a href="/legal/gplv2+ce.html">GPLv2</a>
        &#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
        &#183; <a href="http://www.oracle.com/us/legal/third-party-trademarks/third-party-trademarks-078568.html">Trademarks</a></div><SCRIPT type="text/javascript">
  var sc_project=2527440;
  var sc_invisible=1;
  var sc_partition=24;
  var sc_security="d832a704";
  var sc_remove_link=1;
  </SCRIPT><script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js" async="yes"></script><noscript><div class="statcounter"><img class="statcounter" src="https://c.statcounter.com/2527440/0/d832a704/1/" alt="web statistics" /></div></noscript></body></html>
