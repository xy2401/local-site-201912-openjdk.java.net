<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><title>JEP 139: Enhance javac to Improve Build Speed</title><link rel="shortcut icon" href="/images/nanoduke.ico" /><link rel="stylesheet" type="text/css" href="/page.css" /><script type="text/javascript" src="/page.js"><noscript></noscript></script><style type="text/css" xml:space="preserve">
      TABLE { border-collapse: collapse; padding: 0px; margin: 1em 0; }
      TR:first-child TH, TR:first-child TD { padding-top: 0; }
      TH, TD { padding: 0px; padding-top: .5ex; vertical-align: baseline; text-align: left; }
      TD + TD, TH + TH { padding-left: 1em; }
      TD:first-child, TH:first-child, TD.jep { text-align: right; }
      TABLE.head TD:first-child { font-style: italic; padding-left: 2em; }
      PRE { padding-left: 2em; margin: 1ex 0; font-size: inherit; }
      TABLE PRE { padding-left: 0; margin: 0; }
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { padding-left: .5em; }
      TABLE.jeps TD:first-child,
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { font-size: smaller; }
      TABLE.jeps TD.cl { font-size: smaller; padding-right: 0; text-align: right; }
      TABLE.jeps TD.cm { font-size: smaller; padding-left: .1em; padding-right: .1em; }
      TABLE.jeps TD.cr { font-size: smaller; padding-left: 0; }
      TABLE.jeps TD.z { padding-left: 0; padding-right: 0; }
      TABLE.head TD { padding-top: 0; }
      .withdrawn { text-decoration: line-through; }
    </style></head><body><div id="main"><h1>JEP 139: Enhance javac to Improve Build Speed</h1><table class="head"><tr><td>Owner</td><td>Magnus Ihse Bursie</td></tr><tr><td>Type</td><td>Feature</td></tr><tr><td>Scope</td><td>Implementation</td></tr><tr><td>Status</td><td>Closed&#8201;/&#8201;Delivered</td></tr><tr><td>Release</td><td>8</td></tr><tr><td>Component</td><td>tools&#8201;/&#8201;javac</td></tr><tr><td>Discussion</td><td>compiler dash dev at openjdk dot java dot net</td></tr><tr><td>Effort</td><td>L</td></tr><tr><td>Duration</td><td>M</td></tr><tr><td>Blocks</td><td><a href="138">JEP 138: Autoconf-Based Build System</a></td></tr><tr><td>Endorsed by</td><td>Brian Goetz</td></tr><tr><td>Created</td><td>2011/09/15 20:00</td></tr><tr><td>Updated</td><td>2015/02/13 19:39</td></tr><tr><td>Issue</td><td><a href="https://bugs.openjdk.java.net/browse/JDK-8046129">8046129</a></td></tr></table><div class="markdown"><h2 id="Summary">Summary</h2>
<p>Reduce the time required to build the JDK and enable incremental builds by
modifying the Java compiler to run on all available cores in a single
persistent process, track package and class dependences between builds,
automatically generate header files for native methods, and clean up class and
header files that are no longer needed.</p>
<h2 id="Goals">Goals</h2>
<p>The top level goals are:</p>
<ol>
<li>Increase build speed by having javac use all cores and reuse javac in a
server process.</li>
<li>Simplify work for developers by having javac build incrementally.</li>
</ol>
<p>This project is part of a larger effort to improve the build infrastructure of
the JDK.</p>
<p>The improvements to javac will be internal and not available through the public
api of the javac launcher. Instead an internal wrapper program called
smart-javac (or sjavac for short) will house the new functionality.
Eventually, when the javac wrapper features have stabilized, they can be
proposed in a future JEP to be moved to the public api of javac.  This would
allow all Java developers to take advantage of the improvements.</p>
<h2 id="Non-Goals">Non-Goals</h2>
<p>This project only concerns the changes needed in javac and the new wrapper. It
does not cover the changes needed in the JDK Makefiles to take advantage of
these changes; those are described in
<a href="https://bugs.openjdk.java.net/browse/JDK-8046128">JEP 138: Autoconf-Based Build System</a>.</p>
<p>This project will not concern changes needed in javac to speed up Javadoc
generation.</p>
<h2 id="Success-Metrics">Success Metrics</h2>
<p>All cores should be used when compiling Java sources and there should be a
speedup in build performance when using multiple cores.</p>
<p>The workload distributed on the different cores will not be perfectly balanced
and it is known that the same work will be recomputed several times.  But the
changes supported by this JEP will enable us to successively improve the
sharing of work between the cores within javac.</p>
<p>An incremental build should recompile only the changed packages and their
dependencies.</p>
<p>After an increment build has been done, where classes or native methods were
removed, the output directories should be clean; <em>i.e.</em>, no classes or C-header
files corresponding to the removed sources should remain.</p>
<h2 id="Motivation">Motivation</h2>
<p>Building the complete OpenJDK is unnecessarily slow. This puts an extra burden
on developers and build systems. As a result, developers check out and build
just a part of the source code, since the product as a whole takes too long to
build.</p>
<h2 id="Description">Description</h2>
<p>The internal smart-javac wrapper will probably be invoked like this:</p>
<pre><code>$ java -jar sjavac.jar -classpath ... -sourcepath ... -pkg '*' \
       -j all -h headerdir -d outputdir</code></pre>
<p>This will compile all source files found in the sourcepath with package names
matching anything (<code>'*'</code>) using all (<code>-j</code>) cores.  A database file will be
created in the (<code>-d</code>) outputdir called <code>.javac_state</code> which will contain all
information necessary to do a fast incremental compile, with proper cleanup of
disappearing classes and C-headers as well as correct dependency tracking.</p>
<p>The smart-javac wrapper implements multi core support by creating a
JavaCompiler instance for each core. The source code to be compiled is then
split into packages and randomly distributed to the JavaCompilers.  If a
randomly selected package has dependencies, then these dependencies will be
compiled automatically, but not written to disk, <em>i.e.</em>, <code>-Ximplicit:none</code>. If
an implicitly compiled dependency is later requested as part of a randomly
selected package then the implicit work is not wasted; instead the
already-compiled dependency is written to disk.</p>
<p>Since the initial compile does not know which packages a package depends upon,
a random distribution of work is the best we can do. Therefore
<code>java.lang.Object</code> will be recompiled as many times as there are cores, but
only one of the JavaCompilers will be responsible for writing
<code>java.lang.Object</code> to disk. Enough packages are independent of each other to
make this a workable strategy for making use of multiple cores.</p>
<p>When we improve javac in the future (not part of this JEP), more and more work
will be shared between the JavaCompilers and eventually we will reach the state
where <code>java.lang.Object</code> is only compiled once.</p>
<p>javah will be automatically run on any class that contains native methods and
the generated C-headers will be put in the (<code>-h</code>) headerdir. A new annotation
<code>@ForceNativeHeader</code> is used for classes that have final static primitives that
need to be exported to JNI, but no native methods.</p>
<p>To avoid restarting javac and losing optimizations done by the JVM, the
smart-javac wrapper supports a <code>-server</code> option. This option will spawn a
background javac server so that each subsequent smart-javac wrapper invocation
that refers to the same portfile will reuse the same server.</p>
<p>The <code>-server</code> arguments are:</p>
<ul>
<li><code>portfile</code> = where to store the TCP port used</li>
<li><code>logfile</code> = where to store the output from javac, defaults to
portfile+".logfile"</li>
<li><code>stdouterrfile</code> = where to store output from the server, defaults to
portfile+".stdouterr"</li>
<li><code>javac</code> = the path to the javac to launch by the server, with spaces and
commas replaced by <code>%20</code> and <code>%2C</code>.</li>
</ul>
<p>Example:</p>
<pre><code>-server:portfile=/tmp/jdk.port,javac=/usr/local/bin/java%20\
-jar%20/tmp/openjdk/langtools/dist/lib/bootstrap/sjavac.jar</code></pre>
<p>Since javac cannot currently share state between concurrent compilations, each
additional core will consume roughly as much memory as a single invocation of
javac. Improved sharing between the cores will be successively introduced after
this JEP is completed. The <code>-j</code> option can be used to limit the number of cores
and thus the memory usage.</p>
<p>The javac server stays in memory after all compilations have finished.  The
server will automatically shut down and free memory and other resources after
30 seconds of inactivity.</p>
<p>The server runs as the same user as the normal javac compiler, and thus has the
same privileges and possibility to write to the build output directory. Unlike
the normal javac compiler, a compilation can be trigged by connecting to the
server through a TCP port. Only the command line, and not the source code, is
sent over TCP.</p>
<p>A potential security risk is that an attacker could add the compilation of some
malicious piece of code, which would appear in the output directory. To
alleviate this risk, we will use the several measures:</p>
<ul>
<li>Open a new TCP port each time; the port number is stored in the portfile.</li>
<li>Only allow connections from localhost.</li>
<li>Require a unique cookie to be presented to the server before any
compilation will occur.</li>
</ul>
<p>The cookie is a 64 bit random integer stored in the portfile. The portfile has
typical temporary file permissions, <em>i.e.</em>, only the owner is allowed to read
from it or write to it.</p>
<h2 id="Alternatives">Alternatives</h2>
<p>Instead of making javac properly parallel, we could start several
single-threaded compilations of different and independent java packages in
parallel. This would not require any changes to javac, but it would be much
harder to get the Makefiles correct, and it would not give as much speed
improvement.</p>
<h2 id="Testing">Testing</h2>
<p>The build infrastructure project will test that the output of the old build
system and the new build system is identical.  This will make sure that the
smart-javac wrapper generates identical output for the same source files.</p>
<p>None of the new options are going to be public, so no tests need to be added to
the javac test suite, but more-specific tests for the smart-javac wrapper will
be added to the langtools test directory.</p>
<h2 id="Risks-and-Assumptions">Risks and Assumptions</h2>
<p>Resulting product is incorrect</p>
<ul>
<li>Risk: Javac changes causes incorrect bits to be build</li>
<li>Mitigation plan: Test resulting build properly</li>
</ul>
<p>The old build makefiles will be available concurrently with the new makefiles
to simplify comparing of the old and new bits.</p>
<h2 id="Dependences">Dependences</h2>
<p>This JEP does not depend on any other changes. It forms the basis for
<a href="https://bugs.openjdk.java.net/browse/JDK-8046128">JEP 138: Autoconf-Based Build System</a>, which will use this new
feature in javac to speed up JDK builds.  The new makefiles can use
an unmodified javac, but they will not achieve the desired speedup
and incremental build support unless this JEP is completed.</p>
<h2 id="Impact">Impact</h2>
<ul>
<li>Compatibility: Low impact. We will not add new arguments to javac.</li>
<li>Security: Low impact. In the description section, there is a discussion
about the security aspects of opening up a server for compilation jobs.</li>
<li>I18n/L10n: The new smart-javac wrapper features will most likely result in
a few new messages; we will not fully translate these since smart-javac is
not yet part of any public api.</li>
<li>Testing: Apart from the build itself, separate test cases for the different
smart-javac options should be written.</li>
</ul>
</div></div><div id="sidebar"><div id="openjdk-sidebar-logo"><a href="/"><img alt="OpenJDK logo" src="/images/openjdk-small.png" /></a></div><div class="links"><div class="links"><a href="/workshop"><b>Workshop</b></a></div></div><div class="links"><div class="link"><a href="/faq/">OpenJDK FAQ</a></div><div class="link"><a href="/install/">Installing</a></div><div class="link"><a href="/contribute/">Contributing</a></div><div class="link"><a href="/sponsor/">Sponsoring</a></div><div class="link"><a href="/guide/">Developers' Guide</a></div><div class="link"><a href="/groups/vulnerability/report">Vulnerabilities</a></div></div><div class="links"><div class="links"><a href="//mail.openjdk.java.net">Mailing lists</a></div><div class="link"><a href="/irc">IRC</a>
                      &#183; <a href="https://wiki.openjdk.java.net">Wiki</a></div></div><div class="links"><div class="links"><a href="/bylaws">Bylaws</a> &#183; <a href="/census">Census</a></div><div class="link"><a href="/legal/">Legal</a></div></div><div class="links"><div class="links"><a href="/jeps/0"><b>JEP Process</b></a></div></div><div class="links"><div class="link search"><form method="get" action="https://www.google.com/search"><input id="searchBox" style="color: gray" type="text" name="q" size="10" maxlength="255" value="search" /><input type="hidden" name="sitesearch" value="openjdk.java.net" /></form></div></div><div class="links"><div class="about">Source code</div><div class="link"><a href="//hg.openjdk.java.net">Mercurial</a></div><div class="link">Bundles (<a href="http://download.java.net/openjdk/jdk6">6</a>)</div></div><div class="links"><div class="about">Groups</div><div class="link"><a href="/groups/">(overview)</a></div><div class="link"><a href="/groups/2d">2D Graphics</a></div><div class="link"><a href="/groups/adoption">Adoption</a></div><div class="link"><a href="/groups/awt">AWT</a></div><div class="link"><a href="/groups/build">Build</a></div><div class="link"><a href="/groups/csr">Compatibility &amp; Specification Review</a></div><div class="link"><a href="/groups/compiler">Compiler</a></div><div class="link"><a href="/groups/conformance">Conformance</a></div><div class="link"><a href="/groups/core-libs">Core Libraries</a></div><div class="link"><a href="/groups/gb">Governing Board</a></div><div class="link"><a href="/groups/hotspot">HotSpot</a></div><div class="link"><a href="/groups/ide-support">IDE Tooling &amp; Support</a></div><div class="link"><a href="/groups/i18n">Internationalization</a></div><div class="link"><a href="/groups/jmx">JMX</a></div><div class="link"><a href="/groups/members">Members</a></div><div class="link"><a href="/groups/net">Networking</a></div><div class="link"><a href="/groups/nb-projects">NetBeans Projects</a></div><div class="link"><a href="/groups/porters">Porters</a></div><div class="link"><a href="/groups/quality">Quality</a></div><div class="link"><a href="/groups/security">Security</a></div><div class="link"><a href="/groups/serviceability">Serviceability</a></div><div class="link"><a href="/groups/sound">Sound</a></div><div class="link"><a href="/groups/swing">Swing</a></div><div class="link"><a href="/groups/vulnerability">Vulnerability</a></div><div class="link"><a href="/groups/web">Web</a></div></div><div class="links"><div class="about">Projects</div><div class="link"><a href="/projects/">(overview)</a></div><div class="link"><a href="/projects/amber">Amber</a></div><div class="link"><a href="/projects/anno-pipeline">Annotations Pipeline 2.0</a></div><div class="link"><a href="/projects/audio-engine">Audio Engine</a></div><div class="link"><a href="/projects/build-infra">Build Infrastructure</a></div><div class="link"><a href="/projects/caciocavallo">Caciocavallo</a></div><div class="link"><a href="/projects/closures">Closures</a></div><div class="link"><a href="/projects/code-tools">Code Tools</a></div><div class="link"><a href="/projects/coin">Coin</a></div><div class="link"><a href="/projects/cvmi">Common VM Interface</a></div><div class="link"><a href="/projects/compiler-grammar">Compiler Grammar</a></div><div class="link"><a href="/projects/detroit">Detroit</a></div><div class="link"><a href="/projects/dio">Device I/O</a></div><div class="link"><a href="/projects/duke">Duke</a></div><div class="link"><a href="/projects/font-scaler">Font Scaler</a></div><div class="link"><a href="/projects/fbtoolkit">Framebuffer Toolkit</a></div><div class="link"><a href="/projects/graal">Graal</a></div><div class="link"><a href="/projects/graphics-rasterizer">Graphics Rasterizer</a></div><div class="link"><a href="/projects/harfbuzz">HarfBuzz Integration</a></div><div class="link"><a href="/projects/icedtea">IcedTea</a></div><div class="link"><a href="/projects/jdk6">JDK 6</a></div><div class="link"><a href="/projects/jdk7">JDK 7</a></div><div class="link"><a href="/projects/jdk7u">JDK 7 Updates</a></div><div class="link"><a href="/projects/jdk8">JDK 8</a></div><div class="link"><a href="/projects/jdk8u">JDK 8 Updates</a></div><div class="link"><a href="/projects/jdk9">JDK 9</a></div><div class="link"><a href="/projects/jdk">JDK</a>
      (&#8230;
       <a href="/projects/jdk/12">12</a>,
       <a href="/projects/jdk/13">13</a>,
       <a href="/projects/jdk/14">14</a>)</div><div class="link"><a href="/projects/jdk-updates">JDK Updates</a></div><div class="link"><a href="/projects/javadoc-next">JavaDoc.Next</a></div><div class="link"><a href="/projects/jigsaw">Jigsaw</a></div><div class="link"><a href="/projects/kona">Kona</a></div><div class="link"><a href="/projects/kulla">Kulla</a></div><div class="link"><a href="/projects/lambda">Lambda</a></div><div class="link"><a href="/projects/lanai">Lanai</a></div><div class="link"><a href="/projects/locale-enhancement">Locale Enhancement</a></div><div class="link"><a href="/projects/loom">Loom</a></div><div class="link"><a href="/projects/jmm">Memory Model Update</a></div><div class="link"><a href="/projects/metropolis">Metropolis</a></div><div class="link"><a href="/projects/jmc">Mission Control</a></div><div class="link"><a href="/projects/mobile">Mobile</a></div><div class="link"><a href="/projects/modules">Modules</a></div><div class="link"><a href="/projects/mlvm">Multi-Language VM</a></div><div class="link"><a href="/projects/nashorn">Nashorn</a></div><div class="link"><a href="/projects/nio">New I/O</a></div><div class="link"><a href="/projects/openjfx">OpenJFX</a></div><div class="link"><a href="/projects/panama">Panama</a></div><div class="link"><a href="/projects/penrose">Penrose</a></div><div class="link"><a href="/projects/aarch32-port">Port: AArch32</a></div><div class="link"><a href="/projects/aarch64-port">Port: AArch64</a></div><div class="link"><a href="/projects/bsd-port">Port: BSD</a></div><div class="link"><a href="/projects/haiku-port">Port: Haiku</a></div><div class="link"><a href="/projects/macosx-port">Port: Mac OS X</a></div><div class="link"><a href="/projects/mips-port">Port: MIPS</a></div><div class="link"><a href="/projects/ppc-aix-port">Port: PowerPC/AIX</a></div><div class="link"><a href="/projects/s390x-port">Port: s390x</a></div><div class="link"><a href="/projects/portola">Portola</a></div><div class="link"><a href="/projects/sctp">SCTP</a></div><div class="link"><a href="/projects/skara">Skara</a></div><div class="link"><a href="/projects/shenandoah">Shenandoah</a></div><div class="link"><a href="/projects/sumatra">Sumatra</a></div><div class="link"><a href="/projects/threeten">ThreeTen</a></div><div class="link"><a href="/projects/tiered-attrib">Tiered Attribution</a></div><div class="link"><a href="/projects/tsan">Tsan</a></div><div class="link"><a href="/projects/type-annotations">Type Annotations</a></div><div class="link"><a href="/projects/xrender">XRender Pipeline</a></div><div class="link"><a href="/projects/valhalla">Valhalla</a></div><div class="link"><a href="/projects/verona">Verona</a></div><div class="link"><a href="/projects/visualvm">VisualVM</a></div><div class="link"><a href="/projects/zero">Zero</a></div><div class="link"><a href="/projects/zgc">ZGC</a></div></div><div class="links"><div class="about">Tools</div><div class="link"><a href="http://java.sun.com/javase/downloads/index.jsp">Java SE</a></div><div class="link"><a href="http://mercurial-scm.org/mercurial/">Mercurial</a></div><div class="link"><a href="/jtreg/index.html">jtreg harness</a></div></div><div class="links"><div class="about">Related</div><div class="link"><a href="http://planetjdk.org">Planet JDK</a></div><div class="link"><a href="http://java.sun.com">java.sun.com</a></div><div class="link"><a href="http://jcp.org">Java Community Process</a></div><div class="link"><a href="//jdk.java.net">JDK GA/EA Builds</a></div></div><div class="buttons"><a href="http://oracle.com"><img alt="Oracle logo" src="/images/oracle.png" /></a></div></div><div id="footer">

        &#169; 2019 Oracle Corporation and/or its affiliates
        <br /><a href="/legal/tou/">Terms of Use</a>
        &#183;
        
            License: <a href="/legal/gplv2+ce.html">GPLv2</a>
        &#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
        &#183; <a href="http://www.oracle.com/us/legal/third-party-trademarks/third-party-trademarks-078568.html">Trademarks</a></div><SCRIPT type="text/javascript">
  var sc_project=2527440;
  var sc_invisible=1;
  var sc_partition=24;
  var sc_security="d832a704";
  var sc_remove_link=1;
  </SCRIPT><script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js" async="yes"></script><noscript><div class="statcounter"><img class="statcounter" src="https://c.statcounter.com/2527440/0/d832a704/1/" alt="web statistics" /></div></noscript></body></html>
