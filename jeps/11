<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><title>JEP 11: Incubator Modules</title><link rel="shortcut icon" href="/images/nanoduke.ico" /><link rel="stylesheet" type="text/css" href="/page.css" /><script type="text/javascript" src="/page.js"><noscript></noscript></script><style type="text/css" xml:space="preserve">
      TABLE { border-collapse: collapse; padding: 0px; margin: 1em 0; }
      TR:first-child TH, TR:first-child TD { padding-top: 0; }
      TH, TD { padding: 0px; padding-top: .5ex; vertical-align: baseline; text-align: left; }
      TD + TD, TH + TH { padding-left: 1em; }
      TD:first-child, TH:first-child, TD.jep { text-align: right; }
      TABLE.head TD:first-child { font-style: italic; padding-left: 2em; }
      PRE { padding-left: 2em; margin: 1ex 0; font-size: inherit; }
      TABLE PRE { padding-left: 0; margin: 0; }
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { padding-left: .5em; }
      TABLE.jeps TD:first-child,
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { font-size: smaller; }
      TABLE.jeps TD.cl { font-size: smaller; padding-right: 0; text-align: right; }
      TABLE.jeps TD.cm { font-size: smaller; padding-left: .1em; padding-right: .1em; }
      TABLE.jeps TD.cr { font-size: smaller; padding-left: 0; }
      TABLE.jeps TD.z { padding-left: 0; padding-right: 0; }
      TABLE.head TD { padding-top: 0; }
      .withdrawn { text-decoration: line-through; }
    </style></head><body><div id="main"><h1>JEP 11: Incubator Modules</h1><table class="head"><tr><td>Authors</td><td>Chris Hegarty, Alex Buckley</td></tr><tr><td>Owner</td><td>Chris Hegarty</td></tr><tr><td>Type</td><td>Informational</td></tr><tr><td>Scope</td><td>JDK</td></tr><tr><td>Status</td><td>Active</td></tr><tr><td>Discussion</td><td>jdk dash dev at openjdk dot java dot net</td></tr><tr><td>Effort</td><td>S</td></tr><tr><td>Duration</td><td>S</td></tr><tr><td>Reviewed by</td><td>Alan Bateman, Alex Buckley, Brian Goetz, Paul Sandoz</td></tr><tr><td>Endorsed by</td><td>Brian Goetz</td></tr><tr><td>Created</td><td>2016/11/16 09:17</td></tr><tr><td>Updated</td><td>2019/11/18 19:33</td></tr><tr><td>Issue</td><td><a href="https://bugs.openjdk.java.net/browse/JDK-8169768">8169768</a></td></tr></table><div class="markdown"><h2 id="Summary">Summary</h2>
<p>Incubator modules are a means of putting non-final APIs and non-final tools in the hands of developers, while the APIs/tools progress towards either finalization or removal in a future release.</p>
<h2 id="Goals">Goals</h2>
<ul>
<li>Enable <a href="//openjdk.java.net/bylaws#jdk-release-projects">JDK Release Projects</a> to distribute a limited set of APIs and tools that not final and complete, and which would benefit from developer or user feedback. This will reduce the chance of costly mistakes in the Java SE Platform and the JDK.</li>
</ul>
<h2 id="Non-Goals">Non-Goals</h2>
<ul>
<li>
<p>It is not a goal to define a general-purpose mechanism to distribute arbitrary non-JDK modules.</p>
</li>
<li>
<p>It is not a goal to define the complete lifecycle of a module, API, or tool.</p>
</li>
<li>
<p>It is not a goal that every feature being developed for the JDK be, at some point in its lifecycle, incubated (though that may be desirable).</p>
</li>
<li>
<p>It is not a goal to define a mechanism for incubating language or VM features, but any such future mechanism should use incubator modules for their relevant APIs.</p>
</li>
</ul>
<h2 id="Motivation">Motivation</h2>
<p>Many Java SE Platform APIs, supported JDK APIs, or widely-useful JDK tools would benefit from spending a period of time in a <a href="//openjdk.java.net/bylaws#jdk-release-projects">JDK Release Project</a> prior to being standardized in the JCP or otherwise being deemed stable.  Being in a JDK
Release Project, and thus in downstream binaries such as those at <a href="//jdk.java.net/">jdk.java.net</a>, makes it easier for interested parties outside of the immediate OpenJDK Community to use the new feature. Experience gained and fed back through the usual channels such as blogs, mailing lists, outreach programs, and conferences can then be acted upon before finalizing, or else removing, the feature in a future Release Project.</p>
<h2 id="Description">Description</h2>
<p>An <em>incubating feature</em> is an API or a tool, of non-trivial size, that is under development for eventual inclusion in the Java SE Platform or the JDK. The API or tool is not yet sufficiently proven, so it is desirable to defer standardization or finalization for a small number of feature releases in order to gain additional experience and feedback.</p>
<p>An <em>incubator module</em> is a module in a JDK Release Project that offers an incubating feature: the module either exports an incubating API, or contains an incubating tool, or both.</p>
<p>An incubator module is identified by the <code>jdk.incubator.</code> prefix in its module name, whether the module exports an incubating API or contains an incubating tool.</p>
<p>An incubating API is identified by the <code>jdk.incubator.</code> prefix in its exported package names. An incubating API is exported only by an incubator module.</p>
<p>An incubating tool may use the <code>jdk.incubator</code> prefix in the tool name invoked on the command line, but is not required to.</p>
<p>If an incubating API is standardized in the Java SE Platform, or otherwise promoted to some stable mode of existence in the JDK, then its packages will be renamed and then exported from a non-incubator module. Early adopters will at the very minimum need to change their <code>import</code> statements, and may need to refactor their uses if the API changes more substantially. Similarly, if an incubating tool is promoted to some stable mode of existence, then early adopters may need to change any invoking scripts in order to account for changes in the tool's functionality and command line interface.</p>
<p>If an incubating API is <strong>not</strong> standardized or otherwise promoted after a small number of JDK feature releases, then it will no longer be able to incubate, and its packages and incubator module will be removed. Similarly, if an incubating tool is not promoted, then its incubator module will be removed.</p>
<h3 id="Process-and-Evolution">Process and Evolution</h3>
<p>An incubating feature (API or tool) will use the JEP process as is, with the following guidelines:</p>
<ol>
<li>
<p>The JEP that defines the feature should make it clear that incubation
is planned, and that the result of completing the JEP will be an
incubator module which exports the API/contains the tool.</p>
</li>
<li>
<p>An incubating feature, along with any evolutionary API changes,
that is later promoted to the Java SE Platform, or some other stable mode
of existence in the JDK, should have a new JEP to propose and document that
change. For the new JEP, it is permitted, but not required, to deliver the
promoted API or tool in its own module; the API or tool may be integrated into an
existing standard module or a non-incubator JDK module.</p>
</li>
<li>
<p>If an incubating feature is later removed then no new JEP is
necessary. The incubator module that contains the incubating feature
may be silently removed.  It is recommended that the original JEP be
updated to record the fate of the feature.</p>
</li>
</ol>
<p>One incubator module should contain one incubating feature. (If an incubating tool is associated with an API, then that API may be regarded as part of the tool and exported by the incubator module which contains the incubating tool) Dedicating an incubator module to an incubating feature will help prevent the emergence of a "miscellaneous" incubator module that acts as a dumping ground, as has been seen in the past in some parts of the legacy <code>sun.*</code> namespace. There is clear ownership of incubating features and their impending, or not, future.</p>
<p>An incubating feature need not be retained forever in the JDK Release Project in which it was introduced, nor in every release of downstream binaries derived from that Release Project. For example, an incubating feature may evolve, or even be removed, between different update releases of a JDK Release Project. Beyond this explicit statement of when evolution is permitted, this proposal deliberately provides no further guidance. Such decisions are best left to the individual feature owner.</p>
<p>An incubator module, and its API/tool, will not remain in the JDK long term, so in some sense they are terminally deprecated at birth. However, it is cleaner to think of incubation and deprecation as completely separate concepts, so the <code>@Deprecated</code> annotation and the <code>@deprecated</code> JavaDoc tag should <em>not</em> be used in incubator modules or their APIs.</p>
<h3 id="Relationship-to-other-modules">Relationship to other modules</h3>
<p>Incubator modules must export incubating APIs only, i.e., packages in the <code>jdk.incubator</code> namespace. Consequently:</p>
<ul>
<li>
<p>Incubator modules must not export APIs in the <code>java.</code> or <code>javax.</code> namespaces governed by the JCP. This distinguishes incubator modules from <a href="//openjdk.java.net/jeps/200"><em>standard modules</em></a> such as <code>java.base</code>.</p>
</li>
<li>
<p>Incubator modules must not export supported JDK APIs. This distinguishes incubator modules from JDK modules such as <code>jdk.compiler</code> that do export such APIs.</p>
</li>
<li>
<p>Incubator modules must not export <a href="//openjdk.java.net/jeps/260"><em>critical internal APIs</em></a>. Incubator modules have no relationship to the <code>jdk.unsupported</code> module.</p>
</li>
</ul>
<p>Standard modules and non-incubator JDK modules must not specify <code>requires transitive</code> dependences upon incubator modules, or otherwise expose types exported from incubator modules in their own exported APIs. In exceptional cases, it may be acceptable for standard modules and non-incubator JDK modules to specify <code>requires</code> dependences (as opposed to <code>requires transitive</code>) upon incubator modules.</p>
<p>Incubator modules can specify <code>requires</code> or <code>requires transitive</code> dependences upon other incubator modules.</p>
<p>Incubator modules are part of the JDK run-time image produced by the standard JDK build. However, by default, incubator modules are <strong>not</strong> resolved for applications on the class path. Furthermore, by default, incubator modules do <strong>not</strong> participate in service binding for applications on the class path or the module path.</p>
<p>Applications on the class path must use the <code>--add-modules</code> command-line option to request that an incubator module be resolved. Applications developed as modules can specify <code>requires</code> or <code>requires transitive</code> dependences upon an incubator module directly. (Some incubator modules, such as those offering command-line tools, may forego exporting any packages, and instead provide service implementations so that tools can be accessed programatically. It is usually not recommended to require a module that exports no packages, but it is necessary in this case in order to resolve the incubator module, and have its service providers participate in service binding.)</p>
<p>During the JDK build, incubator modules must be packaged into <code>jmod</code> files with the <code>--do-not-resolve-by-default</code> option of the <code>jmod</code> tool, so that they are not in the default set of root modules for the unnamed module. This makes them, in effect, "opt-in". Also, the <code>--warn-if-resolved=incubating</code> option must be passed to the <code>jmod</code> tool, so that a warning is issued at compile time, link time, and run time if the incubator module is resolved. This warning can be suppressed at compile time, but not at other times.</p>
<p>Incubator modules are granted no default security permissions.</p>
<p>Incubator modules can be operating-system specific.</p>
<h3 id="Integration-points">Integration points</h3>
<p>Many new APIs wish to integrate with the <code>java.*</code> and <code>javax.*</code> APIs of the Java SE Platform, but during incubation, an API must reside <code>jdk.incubator.</code> namespace and so "stands apart" from the SE APIs. For example, consider the Streams API: it may have been necessary for a notional <code>jdk.incubator.stream.Streams</code> class to provide static factory methods such as <code>fromList</code>, <code>fromSet</code>, etc., to enable integration with the existing Collections API. While this is a compromise, integration points with the existing SE APIs typically represent a relatively small surface of a new API.</p>
<p>In some cases an incubating feature may be tightly integrated with the
Java run-time system and the JVM. In such cases low-level operations can
be exposed through <em>qualified exports</em> from the appropriate module(s) in
the JDK to the incubator module containing the feature. An
incubator module that has at least one qualified export from a module in
the JDK must be tightly coupled, i.e., its hash must be recorded in
the exporting module, and the incubator module is therefore not
upgradeable. An incubator module that does not have any qualified exports
from a module in the JDK need not be tightly coupled, and may therefore
be upgradeable. If underlying incubation support is required in the JVM
then it may be necessary to provide a command-line argument, e.g.,
<code>-XX:+UnlockExperimentalVMOptions</code>, or else arrange to enable such
support automatically in the presence of the incubator module.</p>
<h3 id="Documentation">Documentation</h3>
<p>An incubating API will have its JavaDoc built as part of the JDK docs build, in the same way as other JDK APIs. An additional directory structure, <code>jdk/incubator/</code> will be added so as to group the documentation of incubating features on a per-module basis. All JavaDoc built for incubating APIs will have explicit, obvious, and consistent warnings about the incubating state of the feature, and will caution that the feature will eventually be removed.</p>
<h2 id="Alternatives">Alternatives</h2>
<p>Many new features are tightly integrated with the Java run-time system and the JVM.  Distributing them independently of the JDK would thus be difficult, if not impossible, since they need to be tightly tied to a particular build of a particular release.  Distributing them with the JDK ensures that all the necessary pieces are tightly coupled.</p>
<p>Early-access (EA) binaries of a JDK Release Project or another Project will continue to be offered so that developers can try new features and offer feedback before the <a href="//openjdk.java.net/projects/jdk8/milestones#General_Availability">Generally Available</a> (GA) release. However, the number of EA downloads has historically been much smaller than GA downloads, because most developers desire the higher level of stability and quality provided by GA releases. As such, EA releases garner only limited attention and generate only limited feedback, yet incubating features are aimed at a wide range of developers and thus seek broad attention and generous feedback. This makes the EA release of a feature an inadequate alternative to the GA release of an incubating feature.</p>
<h2 id="Testing">Testing</h2>
<p>The code comprising an incubating feature should be tested as any other within the JDK. Specific feature testing requirements should be outlined by the JEP delivering the incubating feature.</p>
<h2 id="Risks-and-Assumptions">Risks and Assumptions</h2>
<p>The obvious risk with an incubating feature is that someone's code or script will come to depend upon it and then be "broken" when run on a later release, in which the incubator feature's module has been removed.  This risk is
mitigated by ensuring that incubating features are <em>opt-in</em>, i.e., by not resolving incubator modules by default, and by issuing warnings, in all phases, when incubator modules are resolved.</p>
</div></div><div id="sidebar"><div id="openjdk-sidebar-logo"><a href="/"><img alt="OpenJDK logo" src="/images/openjdk-small.png" /></a></div><div class="links"><div class="links"><a href="/workshop"><b>Workshop</b></a></div></div><div class="links"><div class="link"><a href="/faq/">OpenJDK FAQ</a></div><div class="link"><a href="/install/">Installing</a></div><div class="link"><a href="/contribute/">Contributing</a></div><div class="link"><a href="/sponsor/">Sponsoring</a></div><div class="link"><a href="/guide/">Developers' Guide</a></div><div class="link"><a href="/groups/vulnerability/report">Vulnerabilities</a></div></div><div class="links"><div class="links"><a href="//mail.openjdk.java.net">Mailing lists</a></div><div class="link"><a href="/irc">IRC</a>
                      &#183; <a href="https://wiki.openjdk.java.net">Wiki</a></div></div><div class="links"><div class="links"><a href="/bylaws">Bylaws</a> &#183; <a href="/census">Census</a></div><div class="link"><a href="/legal/">Legal</a></div></div><div class="links"><div class="links"><a href="/jeps/0"><b>JEP Process</b></a></div></div><div class="links"><div class="link search"><form method="get" action="https://www.google.com/search"><input id="searchBox" style="color: gray" type="text" name="q" size="10" maxlength="255" value="search" /><input type="hidden" name="sitesearch" value="openjdk.java.net" /></form></div></div><div class="links"><div class="about">Source code</div><div class="link"><a href="//hg.openjdk.java.net">Mercurial</a></div><div class="link">Bundles (<a href="http://download.java.net/openjdk/jdk6">6</a>)</div></div><div class="links"><div class="about">Groups</div><div class="link"><a href="/groups/">(overview)</a></div><div class="link"><a href="/groups/2d">2D Graphics</a></div><div class="link"><a href="/groups/adoption">Adoption</a></div><div class="link"><a href="/groups/awt">AWT</a></div><div class="link"><a href="/groups/build">Build</a></div><div class="link"><a href="/groups/csr">Compatibility &amp; Specification Review</a></div><div class="link"><a href="/groups/compiler">Compiler</a></div><div class="link"><a href="/groups/conformance">Conformance</a></div><div class="link"><a href="/groups/core-libs">Core Libraries</a></div><div class="link"><a href="/groups/gb">Governing Board</a></div><div class="link"><a href="/groups/hotspot">HotSpot</a></div><div class="link"><a href="/groups/ide-support">IDE Tooling &amp; Support</a></div><div class="link"><a href="/groups/i18n">Internationalization</a></div><div class="link"><a href="/groups/jmx">JMX</a></div><div class="link"><a href="/groups/members">Members</a></div><div class="link"><a href="/groups/net">Networking</a></div><div class="link"><a href="/groups/nb-projects">NetBeans Projects</a></div><div class="link"><a href="/groups/porters">Porters</a></div><div class="link"><a href="/groups/quality">Quality</a></div><div class="link"><a href="/groups/security">Security</a></div><div class="link"><a href="/groups/serviceability">Serviceability</a></div><div class="link"><a href="/groups/sound">Sound</a></div><div class="link"><a href="/groups/swing">Swing</a></div><div class="link"><a href="/groups/vulnerability">Vulnerability</a></div><div class="link"><a href="/groups/web">Web</a></div></div><div class="links"><div class="about">Projects</div><div class="link"><a href="/projects/">(overview)</a></div><div class="link"><a href="/projects/amber">Amber</a></div><div class="link"><a href="/projects/anno-pipeline">Annotations Pipeline 2.0</a></div><div class="link"><a href="/projects/audio-engine">Audio Engine</a></div><div class="link"><a href="/projects/build-infra">Build Infrastructure</a></div><div class="link"><a href="/projects/caciocavallo">Caciocavallo</a></div><div class="link"><a href="/projects/closures">Closures</a></div><div class="link"><a href="/projects/code-tools">Code Tools</a></div><div class="link"><a href="/projects/coin">Coin</a></div><div class="link"><a href="/projects/cvmi">Common VM Interface</a></div><div class="link"><a href="/projects/compiler-grammar">Compiler Grammar</a></div><div class="link"><a href="/projects/detroit">Detroit</a></div><div class="link"><a href="/projects/dio">Device I/O</a></div><div class="link"><a href="/projects/duke">Duke</a></div><div class="link"><a href="/projects/font-scaler">Font Scaler</a></div><div class="link"><a href="/projects/fbtoolkit">Framebuffer Toolkit</a></div><div class="link"><a href="/projects/graal">Graal</a></div><div class="link"><a href="/projects/graphics-rasterizer">Graphics Rasterizer</a></div><div class="link"><a href="/projects/harfbuzz">HarfBuzz Integration</a></div><div class="link"><a href="/projects/icedtea">IcedTea</a></div><div class="link"><a href="/projects/jdk6">JDK 6</a></div><div class="link"><a href="/projects/jdk7">JDK 7</a></div><div class="link"><a href="/projects/jdk7u">JDK 7 Updates</a></div><div class="link"><a href="/projects/jdk8">JDK 8</a></div><div class="link"><a href="/projects/jdk8u">JDK 8 Updates</a></div><div class="link"><a href="/projects/jdk9">JDK 9</a></div><div class="link"><a href="/projects/jdk">JDK</a>
      (&#8230;
       <a href="/projects/jdk/12">12</a>,
       <a href="/projects/jdk/13">13</a>,
       <a href="/projects/jdk/14">14</a>)</div><div class="link"><a href="/projects/jdk-updates">JDK Updates</a></div><div class="link"><a href="/projects/javadoc-next">JavaDoc.Next</a></div><div class="link"><a href="/projects/jigsaw">Jigsaw</a></div><div class="link"><a href="/projects/kona">Kona</a></div><div class="link"><a href="/projects/kulla">Kulla</a></div><div class="link"><a href="/projects/lambda">Lambda</a></div><div class="link"><a href="/projects/lanai">Lanai</a></div><div class="link"><a href="/projects/locale-enhancement">Locale Enhancement</a></div><div class="link"><a href="/projects/loom">Loom</a></div><div class="link"><a href="/projects/jmm">Memory Model Update</a></div><div class="link"><a href="/projects/metropolis">Metropolis</a></div><div class="link"><a href="/projects/jmc">Mission Control</a></div><div class="link"><a href="/projects/mobile">Mobile</a></div><div class="link"><a href="/projects/modules">Modules</a></div><div class="link"><a href="/projects/mlvm">Multi-Language VM</a></div><div class="link"><a href="/projects/nashorn">Nashorn</a></div><div class="link"><a href="/projects/nio">New I/O</a></div><div class="link"><a href="/projects/openjfx">OpenJFX</a></div><div class="link"><a href="/projects/panama">Panama</a></div><div class="link"><a href="/projects/penrose">Penrose</a></div><div class="link"><a href="/projects/aarch32-port">Port: AArch32</a></div><div class="link"><a href="/projects/aarch64-port">Port: AArch64</a></div><div class="link"><a href="/projects/bsd-port">Port: BSD</a></div><div class="link"><a href="/projects/haiku-port">Port: Haiku</a></div><div class="link"><a href="/projects/macosx-port">Port: Mac OS X</a></div><div class="link"><a href="/projects/mips-port">Port: MIPS</a></div><div class="link"><a href="/projects/ppc-aix-port">Port: PowerPC/AIX</a></div><div class="link"><a href="/projects/s390x-port">Port: s390x</a></div><div class="link"><a href="/projects/portola">Portola</a></div><div class="link"><a href="/projects/sctp">SCTP</a></div><div class="link"><a href="/projects/skara">Skara</a></div><div class="link"><a href="/projects/shenandoah">Shenandoah</a></div><div class="link"><a href="/projects/sumatra">Sumatra</a></div><div class="link"><a href="/projects/threeten">ThreeTen</a></div><div class="link"><a href="/projects/tiered-attrib">Tiered Attribution</a></div><div class="link"><a href="/projects/tsan">Tsan</a></div><div class="link"><a href="/projects/type-annotations">Type Annotations</a></div><div class="link"><a href="/projects/xrender">XRender Pipeline</a></div><div class="link"><a href="/projects/valhalla">Valhalla</a></div><div class="link"><a href="/projects/verona">Verona</a></div><div class="link"><a href="/projects/visualvm">VisualVM</a></div><div class="link"><a href="/projects/zero">Zero</a></div><div class="link"><a href="/projects/zgc">ZGC</a></div></div><div class="links"><div class="about">Tools</div><div class="link"><a href="http://java.sun.com/javase/downloads/index.jsp">Java SE</a></div><div class="link"><a href="http://mercurial-scm.org/mercurial/">Mercurial</a></div><div class="link"><a href="/jtreg/index.html">jtreg harness</a></div></div><div class="links"><div class="about">Related</div><div class="link"><a href="http://planetjdk.org">Planet JDK</a></div><div class="link"><a href="http://java.sun.com">java.sun.com</a></div><div class="link"><a href="http://jcp.org">Java Community Process</a></div><div class="link"><a href="//jdk.java.net">JDK GA/EA Builds</a></div></div><div class="buttons"><a href="http://oracle.com"><img alt="Oracle logo" src="/images/oracle.png" /></a></div></div><div id="footer">

        &#169; 2019 Oracle Corporation and/or its affiliates
        <br /><a href="/legal/tou/">Terms of Use</a>
        &#183;
        
            License: <a href="/legal/gplv2+ce.html">GPLv2</a>
        &#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
        &#183; <a href="http://www.oracle.com/us/legal/third-party-trademarks/third-party-trademarks-078568.html">Trademarks</a></div><SCRIPT type="text/javascript">
  var sc_project=2527440;
  var sc_invisible=1;
  var sc_partition=24;
  var sc_security="d832a704";
  var sc_remove_link=1;
  </SCRIPT><script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js" async="yes"></script><noscript><div class="statcounter"><img class="statcounter" src="https://c.statcounter.com/2527440/0/d832a704/1/" alt="web statistics" /></div></noscript></body></html>
