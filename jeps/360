<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" /><title>JEP 360: Sealed Types (Preview)</title><link rel="shortcut icon" href="/images/nanoduke.ico" /><link rel="stylesheet" type="text/css" href="/page.css" /><script type="text/javascript" src="/page.js"><noscript></noscript></script><style type="text/css" xml:space="preserve">
      TABLE { border-collapse: collapse; padding: 0px; margin: 1em 0; }
      TR:first-child TH, TR:first-child TD { padding-top: 0; }
      TH, TD { padding: 0px; padding-top: .5ex; vertical-align: baseline; text-align: left; }
      TD + TD, TH + TH { padding-left: 1em; }
      TD:first-child, TH:first-child, TD.jep { text-align: right; }
      TABLE.head TD:first-child { font-style: italic; padding-left: 2em; }
      PRE { padding-left: 2em; margin: 1ex 0; font-size: inherit; }
      TABLE PRE { padding-left: 0; margin: 0; }
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { padding-left: .5em; }
      TABLE.jeps TD:first-child,
      TABLE.jeps TD:first-child + TD,
      TABLE.jeps TD:first-child + TD + TD { font-size: smaller; }
      TABLE.jeps TD.cl { font-size: smaller; padding-right: 0; text-align: right; }
      TABLE.jeps TD.cm { font-size: smaller; padding-left: .1em; padding-right: .1em; }
      TABLE.jeps TD.cr { font-size: smaller; padding-left: 0; }
      TABLE.jeps TD.z { padding-left: 0; padding-right: 0; }
      TABLE.head TD { padding-top: 0; }
      .withdrawn { text-decoration: line-through; }
    </style></head><body><div id="main"><h1>JEP 360: Sealed Types (Preview)</h1><table class="head"><tr><td>Owner</td><td>Brian Goetz</td></tr><tr><td>Type</td><td>Feature</td></tr><tr><td>Scope</td><td>SE</td></tr><tr><td>Status</td><td>Candidate</td></tr><tr><td>Component</td><td>specification&#8201;/&#8201;language</td></tr><tr><td>Discussion</td><td>amber dash dev at openjdk dot java dot net</td></tr><tr><td>Effort</td><td>M</td></tr><tr><td>Duration</td><td>M</td></tr><tr><td>Reviewed by</td><td>Alex Buckley</td></tr><tr><td>Created</td><td>2019/07/01 19:45</td></tr><tr><td>Updated</td><td>2019/10/07 20:26</td></tr><tr><td>Issue</td><td><a href="https://bugs.openjdk.java.net/browse/JDK-8227043">8227043</a></td></tr></table><div class="markdown"><h2 id="Summary">Summary</h2>
<p>Enhance the Java programming language with <a href="//cr.openjdk.java.net/~briangoetz/amber/datum.html">sealed types</a>.  Sealed types are classes or interfaces that impose restrictions on which other classes or interfaces may extend or implement them.</p>
<h2 id="Motivation">Motivation</h2>
<p>Java's type system allows us to answer questions such as "Is a Circle a kind of Shape?", but gives considerably less help with questions such as "What are the kinds of Shape?"  The type system is no help at all when it comes to a library restricting which classes can implement a library's types; this means that even if the design intent of the library's author is that a given type only has a specific set of subtypes, this cannot be enforced, and therefore cannot be assumed by the implementation. (Access control allows the library author to constrain which packages can access and therefore implement the library, but cannot distinguish an implementor from a user.)</p>
<p>Being able to capture statements such as "A Shape is either a Circle or a Rectangle" in the type system not only provides useful documentation to users, but also allows the Java compiler to perform better type checking, since it can exhaustively enumerate the known subtypes. It also allows library authors to more reliably reason about the behavior of known implementations, since they can be restricted to the same maintenance domain.</p>
<p>Sealed types serve as a useful source of exhaustiveness information for <a href="https://cr.openjdk.java.net/~briangoetz/amber/pattern-match.html">pattern matching</a>.  Sealed types and <a href="https://openjdk.java.net/jeps/359">records</a>, taken together, form a construct often referred to as <a href="https://en.wikipedia.org/wiki/Algebraic_data_type">algebraic data types</a>.</p>
<h2 id="Goals">Goals</h2>
<p>Enable classes and interfaces to limit permitted subtypes to an enumerated set of types in the same maintenance domain as the type itself.</p>
<h2 id="Non-Goals">Non-Goals</h2>
<p>It is not a goal to provide new forms of access control such as "friends", or to provide fine-grained control over member overriding.</p>
<h2 id="Description">Description</h2>
<p>A <em>sealed type</em> is one for which subtyping is restricted according to guidance specified with the type's declaration.  (Finality can be considered a strong form of sealing, where subtyping is prohibited completely.)</p>
<p>Sealing serves two distinct purposes. The first is that it restricts which classes may be a subclass of a sealed class. The second is that it potentially enables <em>exhaustiveness analysis</em> at the use site, such as when switching over type patterns for an instance of a sealed type.</p>
<p>We specify that a class is sealed by applying the <code>sealed</code> modifier to a class or interface, with an optional <code>permits</code> clause:</p>
<pre><code>sealed interface Node
    permits A, B, C { ... }</code></pre>
<p>With an explicit <code>permits</code> clause, <code>Node</code> may be extended only by the types enumerated by the clause, which further must be members of the same module, or, if in the unnamed module, the same package.</p>
<p>In many situations, this may be overly explicit. If all the subtypes are declared in the same compilation
unit then we can omit the <code>permits</code> clause, in which case the compiler infers a <code>permits</code> clause by enumerating the subtypes declared in the same compilation unit.</p>
<p>Anonymous subclasses (and lambdas) of a sealed type are prohibited.</p>
<p>Abstract subtypes of sealed types are implicitly sealed, unless declared with the <code>non-sealed</code> modifier.</p>
<p>Concrete subtypes of sealed types are implicitly final, unless declared with the <code>non-sealed</code> modifier.</p>
<p>Sealing, like finality, is enforced by both the language compiler and by the JVM.  The sealed-ness of a type, and its list of permitted subtypes, are reified in the <code>class</code> file and enforced at runtime.</p>
<h3 id="Grammar">Grammar</h3>
<pre><code>NormalClassDeclaration:
  {ClassModifier} class TypeIdentifier [TypeParameters]
  [Superclass] [Superinterfaces] [PermittedSubclasses] ClassBody

ClassModifier:
  (one of)
  Annotation public protected private
  abstract static sealed final non-sealed strictfp

PermittedSubclasses:
  permits ClassTypeList

ClassTypeList:
  ClassType {, ClassType}</code></pre>
<h3 id="Restrictions">Restrictions</h3>
<ul>
<li>It is an error if the <code>non-sealed</code> modifier appears on a type when none of its supertypes are sealed.</li>
<li>It is an error if more than one of <code>final</code>, <code>sealed</code>, or <code>non-sealed</code> appears on any type declaration.</li>
<li>It is an error if the <code>permits</code> clause appears on a type that is not declared <code>sealed</code>.</li>
</ul>
<h3 id="Compiled-form-of-a-sealed-type">Compiled form of a sealed type</h3>
<p>The <code>class</code> file of a sealed type must have a <code>PermittedSubtypes</code> attribute, which enumerates the permitted subtypes. If the sealed type's declaration in source code lacks an explicit <code>permits</code> clause then the set of permitted subtypes is computed at compile time to be those subtypes of the sealed type which are declared in the same compilation unit as the sealed type.</p>
<pre><code>PermittedSubtypes_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 permitted_subtypes_count;
    u2 classes[permitted_subtypes_count];
}</code></pre>
<h3 id="Reflection-API">Reflection API</h3>
<p>The following public methods will be added to <code>java.lang.Class</code>:</p>
<ul>
<li><code>java.lang.constant.ClassDesc&lt;?&gt;[] getPermittedSubtypes()</code></li>
<li><code>boolean isSealed()</code></li>
</ul>
<p>The method <code>getPermittedSubtypes()</code> returns an array containing <code>java.lang.constant.ClassDesc</code> objects representing all the permitted subtypes of this class if it is sealed, and returns an empty array if this class is not sealed.</p>
<p>The method <code>isSealed</code> returns true if the given class or interface is sealed. (Compare with <code>isEnum</code>.)</p>
<h2 id="Alternatives">Alternatives</h2>
<p>Some languages have direct support for <a href="https://en.wikipedia.org/wiki/Algebraic_data_type">algebraic data types</a>, such as Haskell's <code>data</code> feature.  It would be possible to express ADTs more directly and in a manner familiar to Java developers through a variant of the <code>enum</code> feature, where a sum of products could be defined in a single declaration.  However, this would not support all the desired use cases, such as those where sums range over classes in more than one compilation unit, or sums that range over classes that are not products.</p>
<p>The <code>permits</code> feature allows a sealed type, such as the <code>Node</code> interface shown earlier, to be accessible-for-invocation by code in any module, but accessible-for-implementation by code in only the module of the sealed type. This makes the type system more expressive than the access control system. With access control alone, if <code>Node</code> is accessible-for-invocation by code in any module (because its package is exported), then <code>Node</code> is also accessible-for-implementation in any module; and if <code>Node</code> is not accessible-for-implementation in any other module, then <code>Node</code> is also not accessible-for-invocation in any other module.</p>
<h2 id="Dependencies">Dependencies</h2>
<p>Sealed types go well with <a href="https://openjdk.java.net/jeps/359">records (JEP 359)</a>, which in turn lend themselves naturally to <a href="https://cr.openjdk.java.net/~briangoetz/amber/pattern-match.html">pattern matching</a>.  Switches over targets whose types are sealed can additionally be checked for exhaustiveness using sealing information when the patterns in the switch are type patterns or total deconstruction patterns.</p>
</div></div><div id="sidebar"><div id="openjdk-sidebar-logo"><a href="/"><img alt="OpenJDK logo" src="/images/openjdk-small.png" /></a></div><div class="links"><div class="links"><a href="/workshop"><b>Workshop</b></a></div></div><div class="links"><div class="link"><a href="/faq/">OpenJDK FAQ</a></div><div class="link"><a href="/install/">Installing</a></div><div class="link"><a href="/contribute/">Contributing</a></div><div class="link"><a href="/sponsor/">Sponsoring</a></div><div class="link"><a href="/guide/">Developers' Guide</a></div><div class="link"><a href="/groups/vulnerability/report">Vulnerabilities</a></div></div><div class="links"><div class="links"><a href="//mail.openjdk.java.net">Mailing lists</a></div><div class="link"><a href="/irc">IRC</a>
                      &#183; <a href="https://wiki.openjdk.java.net">Wiki</a></div></div><div class="links"><div class="links"><a href="/bylaws">Bylaws</a> &#183; <a href="/census">Census</a></div><div class="link"><a href="/legal/">Legal</a></div></div><div class="links"><div class="links"><a href="/jeps/0"><b>JEP Process</b></a></div></div><div class="links"><div class="link search"><form method="get" action="https://www.google.com/search"><input id="searchBox" style="color: gray" type="text" name="q" size="10" maxlength="255" value="search" /><input type="hidden" name="sitesearch" value="openjdk.java.net" /></form></div></div><div class="links"><div class="about">Source code</div><div class="link"><a href="//hg.openjdk.java.net">Mercurial</a></div><div class="link">Bundles (<a href="http://download.java.net/openjdk/jdk6">6</a>)</div></div><div class="links"><div class="about">Groups</div><div class="link"><a href="/groups/">(overview)</a></div><div class="link"><a href="/groups/2d">2D Graphics</a></div><div class="link"><a href="/groups/adoption">Adoption</a></div><div class="link"><a href="/groups/awt">AWT</a></div><div class="link"><a href="/groups/build">Build</a></div><div class="link"><a href="/groups/csr">Compatibility &amp; Specification Review</a></div><div class="link"><a href="/groups/compiler">Compiler</a></div><div class="link"><a href="/groups/conformance">Conformance</a></div><div class="link"><a href="/groups/core-libs">Core Libraries</a></div><div class="link"><a href="/groups/gb">Governing Board</a></div><div class="link"><a href="/groups/hotspot">HotSpot</a></div><div class="link"><a href="/groups/ide-support">IDE Tooling &amp; Support</a></div><div class="link"><a href="/groups/i18n">Internationalization</a></div><div class="link"><a href="/groups/jmx">JMX</a></div><div class="link"><a href="/groups/members">Members</a></div><div class="link"><a href="/groups/net">Networking</a></div><div class="link"><a href="/groups/nb-projects">NetBeans Projects</a></div><div class="link"><a href="/groups/porters">Porters</a></div><div class="link"><a href="/groups/quality">Quality</a></div><div class="link"><a href="/groups/security">Security</a></div><div class="link"><a href="/groups/serviceability">Serviceability</a></div><div class="link"><a href="/groups/sound">Sound</a></div><div class="link"><a href="/groups/swing">Swing</a></div><div class="link"><a href="/groups/vulnerability">Vulnerability</a></div><div class="link"><a href="/groups/web">Web</a></div></div><div class="links"><div class="about">Projects</div><div class="link"><a href="/projects/">(overview)</a></div><div class="link"><a href="/projects/amber">Amber</a></div><div class="link"><a href="/projects/anno-pipeline">Annotations Pipeline 2.0</a></div><div class="link"><a href="/projects/audio-engine">Audio Engine</a></div><div class="link"><a href="/projects/build-infra">Build Infrastructure</a></div><div class="link"><a href="/projects/caciocavallo">Caciocavallo</a></div><div class="link"><a href="/projects/closures">Closures</a></div><div class="link"><a href="/projects/code-tools">Code Tools</a></div><div class="link"><a href="/projects/coin">Coin</a></div><div class="link"><a href="/projects/cvmi">Common VM Interface</a></div><div class="link"><a href="/projects/compiler-grammar">Compiler Grammar</a></div><div class="link"><a href="/projects/detroit">Detroit</a></div><div class="link"><a href="/projects/dio">Device I/O</a></div><div class="link"><a href="/projects/duke">Duke</a></div><div class="link"><a href="/projects/font-scaler">Font Scaler</a></div><div class="link"><a href="/projects/fbtoolkit">Framebuffer Toolkit</a></div><div class="link"><a href="/projects/graal">Graal</a></div><div class="link"><a href="/projects/graphics-rasterizer">Graphics Rasterizer</a></div><div class="link"><a href="/projects/harfbuzz">HarfBuzz Integration</a></div><div class="link"><a href="/projects/icedtea">IcedTea</a></div><div class="link"><a href="/projects/jdk6">JDK 6</a></div><div class="link"><a href="/projects/jdk7">JDK 7</a></div><div class="link"><a href="/projects/jdk7u">JDK 7 Updates</a></div><div class="link"><a href="/projects/jdk8">JDK 8</a></div><div class="link"><a href="/projects/jdk8u">JDK 8 Updates</a></div><div class="link"><a href="/projects/jdk9">JDK 9</a></div><div class="link"><a href="/projects/jdk">JDK</a>
      (&#8230;
       <a href="/projects/jdk/12">12</a>,
       <a href="/projects/jdk/13">13</a>,
       <a href="/projects/jdk/14">14</a>)</div><div class="link"><a href="/projects/jdk-updates">JDK Updates</a></div><div class="link"><a href="/projects/javadoc-next">JavaDoc.Next</a></div><div class="link"><a href="/projects/jigsaw">Jigsaw</a></div><div class="link"><a href="/projects/kona">Kona</a></div><div class="link"><a href="/projects/kulla">Kulla</a></div><div class="link"><a href="/projects/lambda">Lambda</a></div><div class="link"><a href="/projects/lanai">Lanai</a></div><div class="link"><a href="/projects/locale-enhancement">Locale Enhancement</a></div><div class="link"><a href="/projects/loom">Loom</a></div><div class="link"><a href="/projects/jmm">Memory Model Update</a></div><div class="link"><a href="/projects/metropolis">Metropolis</a></div><div class="link"><a href="/projects/jmc">Mission Control</a></div><div class="link"><a href="/projects/mobile">Mobile</a></div><div class="link"><a href="/projects/modules">Modules</a></div><div class="link"><a href="/projects/mlvm">Multi-Language VM</a></div><div class="link"><a href="/projects/nashorn">Nashorn</a></div><div class="link"><a href="/projects/nio">New I/O</a></div><div class="link"><a href="/projects/openjfx">OpenJFX</a></div><div class="link"><a href="/projects/panama">Panama</a></div><div class="link"><a href="/projects/penrose">Penrose</a></div><div class="link"><a href="/projects/aarch32-port">Port: AArch32</a></div><div class="link"><a href="/projects/aarch64-port">Port: AArch64</a></div><div class="link"><a href="/projects/bsd-port">Port: BSD</a></div><div class="link"><a href="/projects/haiku-port">Port: Haiku</a></div><div class="link"><a href="/projects/macosx-port">Port: Mac OS X</a></div><div class="link"><a href="/projects/mips-port">Port: MIPS</a></div><div class="link"><a href="/projects/ppc-aix-port">Port: PowerPC/AIX</a></div><div class="link"><a href="/projects/s390x-port">Port: s390x</a></div><div class="link"><a href="/projects/portola">Portola</a></div><div class="link"><a href="/projects/sctp">SCTP</a></div><div class="link"><a href="/projects/skara">Skara</a></div><div class="link"><a href="/projects/shenandoah">Shenandoah</a></div><div class="link"><a href="/projects/sumatra">Sumatra</a></div><div class="link"><a href="/projects/threeten">ThreeTen</a></div><div class="link"><a href="/projects/tiered-attrib">Tiered Attribution</a></div><div class="link"><a href="/projects/tsan">Tsan</a></div><div class="link"><a href="/projects/type-annotations">Type Annotations</a></div><div class="link"><a href="/projects/xrender">XRender Pipeline</a></div><div class="link"><a href="/projects/valhalla">Valhalla</a></div><div class="link"><a href="/projects/verona">Verona</a></div><div class="link"><a href="/projects/visualvm">VisualVM</a></div><div class="link"><a href="/projects/zero">Zero</a></div><div class="link"><a href="/projects/zgc">ZGC</a></div></div><div class="links"><div class="about">Tools</div><div class="link"><a href="http://java.sun.com/javase/downloads/index.jsp">Java SE</a></div><div class="link"><a href="http://mercurial-scm.org/mercurial/">Mercurial</a></div><div class="link"><a href="/jtreg/index.html">jtreg harness</a></div></div><div class="links"><div class="about">Related</div><div class="link"><a href="http://planetjdk.org">Planet JDK</a></div><div class="link"><a href="http://java.sun.com">java.sun.com</a></div><div class="link"><a href="http://jcp.org">Java Community Process</a></div><div class="link"><a href="//jdk.java.net">JDK GA/EA Builds</a></div></div><div class="buttons"><a href="http://oracle.com"><img alt="Oracle logo" src="/images/oracle.png" /></a></div></div><div id="footer">

        &#169; 2019 Oracle Corporation and/or its affiliates
        <br /><a href="/legal/tou/">Terms of Use</a>
        &#183;
        
            License: <a href="/legal/gplv2+ce.html">GPLv2</a>
        &#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
        &#183; <a href="http://www.oracle.com/us/legal/third-party-trademarks/third-party-trademarks-078568.html">Trademarks</a></div><SCRIPT type="text/javascript">
  var sc_project=2527440;
  var sc_invisible=1;
  var sc_partition=24;
  var sc_security="d832a704";
  var sc_remove_link=1;
  </SCRIPT><script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js" async="yes"></script><noscript><div class="statcounter"><img class="statcounter" src="https://c.statcounter.com/2527440/0/d832a704/1/" alt="web statistics" /></div></noscript></body></html>
